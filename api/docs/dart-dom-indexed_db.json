{"name":"dart-dom-indexed_db","qualifiedName":"dart-dom-indexed_db","comment":"<p>A client-side key-value store with support for indexes.</p>\n<p>Many browsers support IndexedDB&mdash;a web standard for\nan indexed database.\nBy storing data on the client in an IndexedDB,\na web app gets some advantages, such as faster performance and persistence.\nTo find out which browsers support IndexedDB,\nrefer to <a href=\"http://caniuse.com/#feat=indexeddb\">Can I Use?</a></p>\n<p>In IndexedDB, each record is identified by a unique index or key,\nmaking data retrieval speedy.\nYou can store structured data,\nsuch as images, arrays, and maps using IndexedDB.\nThe standard does not specify size limits for individual data items\nor for the database itself, but browsers may impose storage limits.</p>\n<h2>Using indexed_db</h2>\n<p>The classes in this library provide an interface\nto the browser's IndexedDB, if it has one.\nTo use this library in your code:</p>\n<pre><code>import 'dart:indexed_db';\n</code></pre>\n<p>A web app can determine if the browser supports\nIndexedDB with <a>dart-dom-indexed_db.IdbFactory.supported</a>:</p>\n<pre><code>if (IdbFactory.supported)\n  // Use indexeddb.\nelse\n  // Find an alternative.\n</code></pre>\n<p>Access to the browser's IndexedDB is provided by the app's top-level\n<a>dart-dom-html.Window</a> object, which your code can refer to with <code>window.indexedDB</code>.\nSo, for example,\nhere's how to use window.indexedDB to open a database:</p>\n<pre><code>Future open() {\n  return window.indexedDB.open('myIndexedDB',\n      version: 1,\n      onUpgradeNeeded: _initializeDatabase)\n    .then(_loadFromDB);\n}\nvoid _initializeDatabase(VersionChangeEvent e) {\n  ...\n}\nFuture _loadFromDB(Database db) {\n  ...\n}\n</code></pre>\n<p>All data in an IndexedDB is stored within an <a>dart-dom-indexed_db.ObjectStore</a>.\nTo manipulate the database use <a>dart-dom-indexed_db.Transaction</a>s.</p>\n<h2>Other resources</h2>\n<p>Other options for client-side data storage include:</p><ul><li>\n<p><a>dart-dom-html.Window.localStorage</a>&mdash;a\nbasic mechanism that stores data as a <a>dart-core.Map</a>,\nand where both the keys and the values are strings.</p></li><li>\n<p>dart:web_sql&mdash;a database that can be queried with SQL.</p></li></ul>\n<p>For a tutorial about using the indexed_db library with Dart,\ncheck out\n<a href=\"http://www.dartlang.org/docs/tutorials/indexeddb/\">Use IndexedDB</a>.</p>\n<p><a href=\"http://docs.webplatform.org/wiki/apis/indexeddb\">IndexedDB reference</a>\nprovides wiki-style docs about indexedDB</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"Cursor","qualifiedName":"dart-dom-indexed_db.Cursor"},{"name":"CursorWithValue","qualifiedName":"dart-dom-indexed_db.CursorWithValue"},{"name":"Database","qualifiedName":"dart-dom-indexed_db.Database","preview":"<p>An indexed database object for storing client-side data\nin web apps.</p>"},{"name":"IdbFactory","qualifiedName":"dart-dom-indexed_db.IdbFactory"},{"name":"Index","qualifiedName":"dart-dom-indexed_db.Index"},{"name":"KeyRange","qualifiedName":"dart-dom-indexed_db.KeyRange"},{"name":"ObjectStore","qualifiedName":"dart-dom-indexed_db.ObjectStore"},{"name":"OpenDBRequest","qualifiedName":"dart-dom-indexed_db.OpenDBRequest"},{"name":"Request","qualifiedName":"dart-dom-indexed_db.Request"},{"name":"Transaction","qualifiedName":"dart-dom-indexed_db.Transaction"},{"name":"VersionChangeEvent","qualifiedName":"dart-dom-indexed_db.VersionChangeEvent"}],"typedef":{},"error":[]},"packageName":"","packageIntro":null}