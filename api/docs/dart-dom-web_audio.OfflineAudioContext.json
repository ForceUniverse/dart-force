{"name":"OfflineAudioContext","qualifiedName":"dart-dom-web_audio.OfflineAudioContext","comment":"","isAbstract":false,"superclass":"dart-dom-web_audio.AudioContext","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"activeSourceCount":{"name":"activeSourceCount","qualifiedName":"dart-dom-web_audio.AudioContext.activeSourceCount","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.activeSourceCount'"]}]},"currentTime":{"name":"currentTime","qualifiedName":"dart-dom-web_audio.AudioContext.currentTime","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.currentTime'"]}]},"destination":{"name":"destination","qualifiedName":"dart-dom-web_audio.AudioContext.destination","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-web_audio.AudioDestinationNode","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.destination'"]}]},"listener":{"name":"listener","qualifiedName":"dart-dom-web_audio.AudioContext.listener","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-web_audio.AudioListener","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.listener'"]}]},"sampleRate":{"name":"sampleRate","qualifiedName":"dart-dom-web_audio.AudioContext.sampleRate","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.sampleRate'"]}]}},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.OfflineAudioContext-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.OfflineAudioContext","inner":[]}],"parameters":{"numberOfChannels":{"name":"numberOfChannels","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfFrames":{"name":"numberOfFrames","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"sampleRate":{"name":"sampleRate","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OfflineAudioContext.OfflineAudioContext'"]}]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-web_audio.OfflineAudioContext.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"on":{"name":"on","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.on","comment":"<p>This is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.</p>","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.on","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Events","inner":[]}],"parameters":{},"annotations":[]},"onComplete":{"name":"onComplete","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.onComplete","comment":"<p>Stream of <code>complete</code> events handled by this <a>dart-dom-web_audio.AudioContext</a>.</p>","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.onComplete","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.oncomplete'"]}]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-web_audio.OfflineAudioContext.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-web_audio.OfflineAudioContext.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"addEventListener":{"name":"addEventListener","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.addEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.addEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.addEventListener'"]}]},"createAnalyser":{"name":"createAnalyser","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createAnalyser","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createAnalyser","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.AnalyserNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createAnalyser'"]}]},"createBiquadFilter":{"name":"createBiquadFilter","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createBiquadFilter","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createBiquadFilter","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.BiquadFilterNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createBiquadFilter'"]}]},"createBuffer":{"name":"createBuffer","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createBuffer","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createBuffer","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.AudioBuffer","inner":[]}],"parameters":{"numberOfChannels":{"name":"numberOfChannels","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfFrames":{"name":"numberOfFrames","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"sampleRate":{"name":"sampleRate","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createBuffer'"]}]},"createBufferFromBuffer":{"name":"createBufferFromBuffer","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createBufferFromBuffer","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createBufferFromBuffer","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.AudioBuffer","inner":[]}],"parameters":{"buffer":{"name":"buffer","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.ByteBuffer","inner":[]}],"value":null,"annotations":[]},"mixToMono":{"name":"mixToMono","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createBuffer'"]}]},"createBufferSource":{"name":"createBufferSource","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createBufferSource","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createBufferSource","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.AudioBufferSourceNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createBufferSource'"]}]},"createChannelMerger":{"name":"createChannelMerger","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createChannelMerger","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createChannelMerger","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.ChannelMergerNode","inner":[]}],"parameters":{"numberOfInputs":{"name":"numberOfInputs","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createChannelMerger'"]}]},"createChannelSplitter":{"name":"createChannelSplitter","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createChannelSplitter","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createChannelSplitter","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.ChannelSplitterNode","inner":[]}],"parameters":{"numberOfOutputs":{"name":"numberOfOutputs","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createChannelSplitter'"]}]},"createConvolver":{"name":"createConvolver","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createConvolver","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createConvolver","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.ConvolverNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createConvolver'"]}]},"createDelay":{"name":"createDelay","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createDelay","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createDelay","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.DelayNode","inner":[]}],"parameters":{"maxDelayTime":{"name":"maxDelayTime","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createDelay'"]}]},"createDelayNode":{"name":"createDelayNode","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createDelayNode","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createDelayNode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.DelayNode","inner":[]}],"parameters":{"maxDelayTime":{"name":"maxDelayTime","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createDelayNode'"]}]},"createDynamicsCompressor":{"name":"createDynamicsCompressor","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createDynamicsCompressor","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createDynamicsCompressor","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.DynamicsCompressorNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createDynamicsCompressor'"]}]},"createGain":{"name":"createGain","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createGain","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createGain","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.GainNode","inner":[]}],"parameters":{},"annotations":[]},"createGainNode":{"name":"createGainNode","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createGainNode","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createGainNode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.GainNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createGainNode'"]}]},"createJavaScriptNode":{"name":"createJavaScriptNode","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createJavaScriptNode","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createJavaScriptNode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.ScriptProcessorNode","inner":[]}],"parameters":{"bufferSize":{"name":"bufferSize","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfInputChannels":{"name":"numberOfInputChannels","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfOutputChannels":{"name":"numberOfOutputChannels","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createJavaScriptNode'"]}]},"createMediaElementSource":{"name":"createMediaElementSource","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createMediaElementSource","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createMediaElementSource","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.MediaElementAudioSourceNode","inner":[]}],"parameters":{"mediaElement":{"name":"mediaElement","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaElement","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createMediaElementSource'"]}]},"createMediaStreamDestination":{"name":"createMediaStreamDestination","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createMediaStreamDestination","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createMediaStreamDestination","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.MediaStreamAudioDestinationNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createMediaStreamDestination'"]}]},"createMediaStreamSource":{"name":"createMediaStreamSource","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createMediaStreamSource","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createMediaStreamSource","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.MediaStreamAudioSourceNode","inner":[]}],"parameters":{"mediaStream":{"name":"mediaStream","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaStream","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createMediaStreamSource'"]}]},"createOscillator":{"name":"createOscillator","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createOscillator","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createOscillator","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.OscillatorNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createOscillator'"]}]},"createPanner":{"name":"createPanner","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createPanner","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createPanner","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.PannerNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createPanner'"]}]},"createPeriodicWave":{"name":"createPeriodicWave","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createPeriodicWave","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createPeriodicWave","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.PeriodicWave","inner":[]}],"parameters":{"real":{"name":"real","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Float32List","inner":[]}],"value":null,"annotations":[]},"imag":{"name":"imag","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Float32List","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createPeriodicWave'"]},{"name":"metadata.Experimental","parameters":[]}]},"createScriptProcessor":{"name":"createScriptProcessor","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createScriptProcessor","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createScriptProcessor","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.ScriptProcessorNode","inner":[]}],"parameters":{"bufferSize":{"name":"bufferSize","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfInputChannels":{"name":"numberOfInputChannels","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"numberOfOutputChannels":{"name":"numberOfOutputChannels","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"createWaveShaper":{"name":"createWaveShaper","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.createWaveShaper","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.createWaveShaper","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_audio.WaveShaperNode","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.createWaveShaper'"]}]},"decodeAudioData":{"name":"decodeAudioData","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.decodeAudioData","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.decodeAudioData","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-web_audio.AudioBuffer","inner":[]}]}],"parameters":{"audioData":{"name":"audioData","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.ByteBuffer","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.decodeAudioData'"]}]},"dispatchEvent":{"name":"dispatchEvent","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.dispatchEvent","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.dispatchEvent","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.dispatchEvent'"]}]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.noSuchMethod","comment":"<p><a>dart-dom-web_audio.OfflineAudioContext.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-web_audio.OfflineAudioContext.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-web_audio.OfflineAudioContext.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-web_audio.OfflineAudioContext.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeEventListener":{"name":"removeEventListener","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.removeEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.removeEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.removeEventListener'"]}]},"startRendering":{"name":"startRendering","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.startRendering","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioContext.startRendering","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'AudioContext.startRendering'"]}]},"toString":{"name":"toString","qualifiedName":"dart-dom-web_audio.OfflineAudioContext.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'OfflineAudioContext'"]},{"name":"metadata.Experimental","parameters":[]}],"generics":{}}