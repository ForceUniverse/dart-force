{"name":"HeapPriorityQueue","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue","comment":"<p>Heap based priority queue.</p>\n<p>The elements are kept in a heap structure,\nwhere the element with the highest priority is immediately accessible,\nand modifying a single element takes\nlogarithmic time in the number of elements on average.</p><ul><li>\n<p>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.add</a> and <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a> operations take amortized logarithmic time,\n  O(log(n)), but may occasionally take linear time when growing the capacity\n  of the heap.</p></li><li>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.addAll</a> operation works as doing repeated <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.add</a> operations.</li><li>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.first</a> getter takes constant time, O(1).</li><li>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.clear</a> and <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeAll</a> methods also take constant time, O(1).</li><li>\n<p>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.contains</a> and <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.remove</a> operations may need to search the entire\n  queue for the elements, taking O(n) time.</p></li><li>\n<p>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toList</a> operation effectively sorts the elements, taking O(n*log(n))\n  time.</p></li><li>\n<p>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toSet</a> operation effectively adds each element to the new set, taking\n  an expected O(n*log(n)) time.</p></li></ul>","isAbstract":false,"superclass":"dart-core.Object","implements":["collection/dart-pkg-collection-priority_queue.PriorityQueue"],"subclass":[],"variables":{"comparison":{"name":"comparison","qualifiedName":"collection/dart-pkg-collection.HeapPriorityQueue.comparison","comment":"<p>The comparison being used to compare the priority of elements.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.Comparator","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"first":{"name":"first","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.first","comment":"<p>Returns the next element that will be returned by <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>.</p>\n<p>The element is not removed from the queue.</p>\n<p>The queue must not be empty when this method is called.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.first","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.isEmpty","comment":"<p>Whether the queue is empty.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.isEmpty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.isNotEmpty","comment":"<p>Whether the queue has any elements.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.isNotEmpty","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.length","comment":"<p>Number of elements in the queue.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.length","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.HeapPriorityQueue-","comment":"<p>Create a new priority queue.</p>\n<p>The <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.HeapPriorityQueue-.comparison</a> is a <a>dart-core.Comparator</a> used to compare the priority of\nelements. An element that compares as less than another element has\na higher priority.</p>\n<p>If <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.HeapPriorityQueue-.comparison</a> is omitted, it defaults to <a>collection/dart-core.Comparable.compare</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"comparison":{"name":"comparison","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"e1":{"name":"e1","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"value":null,"annotations":[]},"e2":{"name":"e2","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]}},"operators":{},"methods":{"add":{"name":"add","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.add","comment":"<p>Adds element to the queue.</p>\n<p>The element will become the next to be removed by <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>\nwhen all elements with higher priority have been removed.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.add","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.addAll","comment":"<p>Adds all <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.addAll.elements</a> to the queue.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.addAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"clear":{"name":"clear","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.clear","comment":"<p>Removes all the elements from this queue.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.clear","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"contains":{"name":"contains","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.contains","comment":"<p>Checks if <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.contains.object</a> is in the queue.</p>\n<p>Returns true if the element is found.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.contains","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"object":{"name":"object","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.remove","comment":"<p>Removes an element that compares equal to <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.remove.element</a> in the queue.</p>\n<p>Returns true if an element is found and removed,\nand false if no equal element is found.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.remove","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAll":{"name":"removeAll","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeAll","comment":"<p>Removes all the elements from this queue and returns them.</p>\n<p>The returned iterable has no specified order.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.removeAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"removeFirst":{"name":"removeFirst","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst","comment":"<p>Removes and returns the element with the highest priority.</p>\n<p>Repeatedly calling this method, without adding element in between,\nis guaranteed to return elements in non-decreasing order as, specified by\n<a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.comparison</a>.</p>\n<p>The queue must not be empty when this method is called.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.removeFirst","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"parameters":{},"annotations":[]},"toList":{"name":"toList","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toList","comment":"<p>Returns a list of the elements of this queue in priority order.</p>\n<p>The queue is not modified.</p>\n<p>The order is the order that the elements would be in if they were\nremoved from this queue using <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.toList","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"toSet":{"name":"toSet","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toSet","comment":"<p>Return a comparator based set using the comparator of this queue.</p>\n<p>The queue is not modified.</p>\n<p>The returned <a>dart-core.Set</a> is currently a <a>collection/dart-collection.SplayTreeSet</a>,\nbut this may change as other ordered sets are implemented.</p>\n<p>The set contains all the elements of this queue.\nIf an element occurs more than once in the queue,\nthe set will contain it only once.</p>","commentFrom":"dart-pkg-collection.PriorityQueue.toSet","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Set","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toString","comment":"<p>Returns some representation of the queue.</p>\n<p>The format isn't significant, and may change in the future.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"first":{"name":"first","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.first","comment":"<p>Returns the next element that will be returned by <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>.</p>\n<p>The element is not removed from the queue.</p>\n<p>The queue must not be empty when this method is called.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.first","static":false,"abstract":true,"constant":false,"return":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.isEmpty","comment":"<p>Whether the queue is empty.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.isEmpty","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.isNotEmpty","comment":"<p>Whether the queue has any elements.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.isNotEmpty","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.length","comment":"<p>Number of elements in the queue.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.length","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"add":{"name":"add","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.add","comment":"<p>Adds element to the queue.</p>\n<p>The element will become the next to be removed by <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>\nwhen all elements with higher priority have been removed.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.add","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.PriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.addAll","comment":"<p>Adds all <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.addAll.elements</a> to the queue.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.addAll","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.PriorityQueue.E","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"clear":{"name":"clear","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.clear","comment":"<p>Removes all the elements from this queue.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.clear","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"contains":{"name":"contains","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.contains","comment":"<p>Checks if <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.contains.object</a> is in the queue.</p>\n<p>Returns true if the element is found.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.contains","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"object":{"name":"object","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.PriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.noSuchMethod","comment":"<p><a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.remove","comment":"<p>Removes an element that compares equal to <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.remove.element</a> in the queue.</p>\n<p>Returns true if an element is found and removed,\nand false if no equal element is found.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.remove","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"collection/dart-pkg-collection-priority_queue.PriorityQueue.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeAll":{"name":"removeAll","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeAll","comment":"<p>Removes all the elements from this queue and returns them.</p>\n<p>The returned iterable has no specified order.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.removeAll","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"removeFirst":{"name":"removeFirst","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst","comment":"<p>Removes and returns the element with the highest priority.</p>\n<p>Repeatedly calling this method, without adding element in between,\nis guaranteed to return elements in non-decreasing order as, specified by\n<a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.comparison</a>.</p>\n<p>The queue must not be empty when this method is called.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.removeFirst","static":false,"abstract":true,"constant":false,"return":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}],"parameters":{},"annotations":[]},"toList":{"name":"toList","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toList","comment":"<p>Returns a list of the elements of this queue in priority order.</p>\n<p>The queue is not modified.</p>\n<p>The order is the order that the elements would be in if they were\nremoved from this queue using <a>collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.removeFirst</a>.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.toList","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"toSet":{"name":"toSet","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toSet","comment":"<p>Return a comparator based set using the comparator of this queue.</p>\n<p>The queue is not modified.</p>\n<p>The returned <a>dart-core.Set</a> is currently a <a>collection/dart-collection.SplayTreeSet</a>,\nbut this may change as other ordered sets are implemented.</p>\n<p>The set contains all the elements of this queue.\nIf an element occurs more than once in the queue,\nthe set will contain it only once.</p>","commentFrom":"","inheritedFrom":"dart-pkg-collection-priority_queue.PriorityQueue.toSet","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.Set","inner":[{"outer":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.E","inner":[]}]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"collection/dart-pkg-collection-priority_queue.HeapPriorityQueue.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{"E":{"name":"E","type":"dart.core.Object"}}}