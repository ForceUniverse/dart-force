{"name":"ghpages_generator","qualifiedName":"ghpages_generator/ghpages_generator","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"moveDartDocAtRoot":{"name":"moveDartDocAtRoot","qualifiedName":"ghpages_generator/ghpages_generator.moveDartDocAtRoot","comment":"<p>Move the dartdoc folder at the root.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"workDir":{"name":"workDir","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"moveWebAtRoot":{"name":"moveWebAtRoot","qualifiedName":"ghpages_generator/ghpages_generator.moveWebAtRoot","comment":"<p>Move the web folder at the root.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"workDir":{"name":"workDir","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"updateWithWebOnly":{"name":"updateWithWebOnly","qualifiedName":"ghpages_generator/ghpages_generator.updateWithWebOnly","comment":"<p>Update the gh-pages branch with the pub build of web folder.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"doCustomTask":{"name":"doCustomTask","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{"workDir":{"name":"workDir","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}}}}},"annotations":[]}}},"classes":{"class":[{"name":"Generator","qualifiedName":"ghpages_generator/ghpages_generator.Generator","preview":"<p>This class allows to generate a new version of gh-pages. You can choose\nwhat you want to put in gh-pages : examples, dartdoc, docs and/or custom\nfiles.</p>"}],"typedef":{},"error":[]},"packageName":"ghpages_generator","packageIntro":"<h1>Dart Gh-Pages Generator</h1>\n<p>This project allows to create/update the <em>gh-pages</em> branch based on <em>examples</em>, <em>dartdoc</em>,\n<em>docs</em>, <em>web</em> and/or custom files.</p>\n<p>Basically a new commit is done in the <em>gh-pages</em> branch with updated files\ngenerated. Then you only need to <em>push</em> this branch on <em>github</em>.</p>\n<h2>Usage</h2><ol><li>Add a <code>dev_dependency</code> in your <code>pubspec.yaml</code> to <em>ghpages</em>generator_.</li><li>Create a Dart script to define how is built you ghpages.</li></ol>\n<h3>create dartdoc</h3>\n<p>Here's how is generated <a href=\"http://a14n.github.io/dart-ghpages-generator\">gh-pages for this package</a> :</p>\n<pre class=\"dart\"><code>import 'package:ghpages_generator/ghpages_generator.dart' as gh;\n\nmain() {\n  new gh.Generator()\n      ..setDartDoc(['lib/ghpages_generator.dart'], includeSdk: false,\n          excludedLibs: ['path'], startPage: 'ghpages_generator')\n      ..generate(doCustomTask: gh.moveDartDocAtRoot);\n}\n</code></pre>\n<h3>publish web build</h3>\n<p>If you simply want to update the gh-pages with the result of <code>pub build web</code> you\ncan run the following program :</p>\n<pre class=\"dart\"><code>import 'package:ghpages_generator/ghpages_generator.dart' as gh;\n\nmain() {\n  gh.updateWithWebOnly();\n}\n</code></pre>\n<h2>Actions</h2>\n<p>Here's the available actions :</p><ul><li>generate the <em>dartdoc</em> with <code>setDartDoc</code></li><li>compile and deploy the <em>examples</em> with <code>setExamples</code></li><li>add the <code>docs</code> directory with <code>withDocs</code></li><li>\n<p>add static files with <code>templateDir</code> : all files in the template directory are\npasted to the <em>gh-pages</em> branch</p></li></ul>\n<h2>License</h2>\n<p>Apache 2.0</p>"}