{"name":"LinkedListEntry","qualifiedName":"dart-collection.LinkedListEntry","comment":"<p>An object that can be an element in a <a>dart-collection.LinkedList</a>.</p>\n<p>All elements of a <code>LinkedList</code> must extend this class.\nThe class provides the internal links that link elements together\nin the <code>LinkedList</code>, and a reference to the linked list itself\nthat an element is currently part of.</p>\n<p>An entry can be in at most one linked list at a time.\nWhile an entry is in a linked list, the <a>dart-collection.LinkedListEntry.list</a> property points to that\nlinked list, and otherwise the <code>list</code> property is <code>null</code>.</p>\n<p>When created, an entry is not in any linked list.</p>","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"list":{"name":"list","qualifiedName":"dart-collection.LinkedListEntry.list","comment":"<p>Get the linked list containing this element.</p>\n<p>Returns <code>null</code> if this entry is not currently in any list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-collection.LinkedList","inner":[{"outer":"dart-collection.LinkedListEntry.E","inner":[]}]}],"parameters":{},"annotations":[]},"next":{"name":"next","qualifiedName":"dart-collection.LinkedListEntry.next","comment":"<p>Return the succeessor of this element in its linked list.</p>\n<p>Returns <code>null</code> if there is no successor in the linked list, or if this\nentry is not currently in any list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-collection.LinkedListEntry.E","inner":[]}],"parameters":{},"annotations":[]},"previous":{"name":"previous","qualifiedName":"dart-collection.LinkedListEntry.previous","comment":"<p>Return the predecessor of this element in its linked list.</p>\n<p>Returns <code>null</code> if there is no predecessor in the linked list, or if this\nentry is not currently in any list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-collection.LinkedListEntry.E","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"insertAfter":{"name":"insertAfter","qualifiedName":"dart-collection.LinkedListEntry.insertAfter","comment":"<p>Insert an element after this element in this element's linked list.</p>\n<p>This entry must be in a linked list when this method is called.\nThe <a>dart-collection.LinkedListEntry.insertAfter.entry</a> must not be in a linked list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"entry":{"name":"entry","optional":false,"named":false,"default":false,"type":[{"outer":"dart-collection.LinkedListEntry.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"insertBefore":{"name":"insertBefore","qualifiedName":"dart-collection.LinkedListEntry.insertBefore","comment":"<p>Insert an element before this element in this element's linked list.</p>\n<p>This entry must be in a linked list when this method is called.\nThe <a>dart-collection.LinkedListEntry.insertBefore.entry</a> must not be in a linked list.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"entry":{"name":"entry","optional":false,"named":false,"default":false,"type":[{"outer":"dart-collection.LinkedListEntry.E","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"unlink":{"name":"unlink","qualifiedName":"dart-collection.LinkedListEntry.unlink","comment":"<p>Unlink the element from its linked list.</p>\n<p>The entry must currently be in a linked list when this method is called.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-collection.LinkedListEntry.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-collection.LinkedListEntry.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-collection.LinkedListEntry.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-collection.LinkedListEntry.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-collection.LinkedListEntry.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-collection.LinkedListEntry.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-collection.LinkedListEntry.noSuchMethod","comment":"<p><a>dart-collection.LinkedListEntry.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-collection.LinkedListEntry.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-collection.LinkedListEntry.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-collection.LinkedListEntry.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"dart-collection.LinkedListEntry.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{"E":{"name":"E","type":"dart.collection.LinkedListEntry"}}}