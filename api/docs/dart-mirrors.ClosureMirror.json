{"name":"ClosureMirror","qualifiedName":"dart-mirrors.ClosureMirror","comment":"<p>A <a>dart-mirrors.ClosureMirror</a> reflects a closure.</p>\n<p>A <a>dart-mirrors.ClosureMirror</a> provides access to its captured variables and\nprovides the ability to execute its reflectee.</p>","isAbstract":true,"superclass":"dart-core.Object","implements":["dart-mirrors.InstanceMirror"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"function":{"name":"function","qualifiedName":"dart-mirrors.ClosureMirror.function","comment":"<p>A mirror on the function associated with this closure.</p>\n<p>The function associated with an implicit closure of a function is that\nfunction.</p>\n<p>The function associated with an instance of a class that has a <code>call</code>\nmethod is that <code>call</code> method.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.MethodMirror","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"apply":{"name":"apply","qualifiedName":"dart-mirrors.ClosureMirror.apply","comment":"<p>Executes the closure and returns a mirror on the result.\nLet <em>f</em> be the closure reflected by this mirror,\nlet <em>a1, ..., an</em> be the elements of <a>dart-mirrors.ClosureMirror.apply.positionalArguments</a>\nlet <em>k1, ..., km</em> be the identifiers denoted by the elements of\nnamedArguments.keys\nand let <em>v1, ..., vm</em> be the elements of namedArguments.values.\nThen this method will perform the method invocation\n <em>f(a1, ..., an, k1: v1, ..., km: vm)</em>\nIf the invocation returns a result <em>r</em>, this method returns\nthe result of calling <a href=\"*r*\">reflect</a>.\nIf the invocation causes a compilation error\nthe effect is the same as if a non-reflective compilation error\nhad been encountered.\nIf the invocation throws an exception <em>e</em> (that it does not catch)\nthis method throws <em>e</em>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.InstanceMirror","inner":[]}],"parameters":{"positionalArguments":{"name":"positionalArguments","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[]}],"value":null,"annotations":[]},"namedArguments":{"name":"namedArguments","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.Symbol","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"findInContext":{"name":"findInContext","qualifiedName":"dart-mirrors.ClosureMirror.findInContext","comment":"<p>Not yet supported. Calling this method throws an <a>dart-core.UnsupportedError</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.InstanceMirror","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Symbol","inner":[]}],"value":null,"annotations":[]},"ifAbsent":{"name":"ifAbsent","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hasReflectee":{"name":"hasReflectee","qualifiedName":"dart-mirrors.ClosureMirror.hasReflectee","comment":"<p>Does <a>dart-mirrors.ClosureMirror.reflectee</a> contain the instance reflected by this mirror?\nThis will always be true in the local case (reflecting instances\nin the same isolate), but only true in the remote case if this\nmirror reflects a simple value.</p>\n<p>A value is simple if one of the following holds:\n - the value is <code>null</code>\n - the value is of type <a>dart-core.num</a>\n - the value is of type <a>dart-core.bool</a>\n - the value is of type <a>dart-core.String</a></p>","commentFrom":"","inheritedFrom":"dart-mirrors.InstanceMirror.hasReflectee","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"dart-mirrors.ClosureMirror.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-mirrors.ClosureMirror.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"reflectee":{"name":"reflectee","qualifiedName":"dart-mirrors.ClosureMirror.reflectee","comment":"<p>If the <a>dart-mirrors.InstanceMirror</a> reflects an instance it is meaningful to\nhave a local reference to, we provide access to the actual\ninstance here.</p>\n<p>If you access <a>dart-mirrors.ClosureMirror.reflectee</a> when <a>dart-mirrors.ClosureMirror.hasReflectee</a> is false, an\nexception is thrown.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.InstanceMirror.reflectee","static":false,"abstract":true,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-mirrors.ClosureMirror.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"type":{"name":"type","qualifiedName":"dart-mirrors.ClosureMirror.type","comment":"<p>A mirror on the type of the reflectee.</p>\n<p>Returns a mirror on the actual class of the reflectee.\nThe class of the reflectee may differ from\nthe object returned by invoking <a>dart-mirrors.ClosureMirror.runtimeType</a> on\nthe reflectee.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.InstanceMirror.type","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.ClassMirror","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-mirrors.ClosureMirror.==","comment":"<p>Returns true if this mirror is equal to <a>dart-mirrors.ClosureMirror.==.other</a>.\nThe equality holds if and only if\n(1) <a>dart-mirrors.ClosureMirror.==.other</a> is a mirror of the same kind\nand\n(2) either\n(a) <a>dart-mirrors.ClosureMirror.hasReflectee</a> is true and so is\n<code>identical(reflectee, other.reflectee)</code>\nor\n(b) the remote objects reflected by this mirror and\nby <a>dart-mirrors.ClosureMirror.==.other</a> are identical.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.InstanceMirror.==","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"delegate":{"name":"delegate","qualifiedName":"dart-mirrors.ClosureMirror.delegate","comment":"<p>Perform <a>dart-mirrors.ClosureMirror.delegate.invocation</a> on <a>dart-mirrors.ClosureMirror.reflectee</a>.\nEquivalent to</p>\n<p>this.invoke(invocation.memberName,</p>\n<pre><code>        invocation.positionalArguments,\n        invocation.namedArguments);\n</code></pre>","commentFrom":"","inheritedFrom":"dart-mirrors.InstanceMirror.delegate","static":false,"abstract":true,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getField":{"name":"getField","qualifiedName":"dart-mirrors.ClosureMirror.getField","comment":"<p>Invokes a getter and returns a mirror on the result. The getter\ncan be the implicit getter for a field or a user-defined getter\nmethod.</p>\n<p>Let <em>o</em> be the object reflected by this mirror, let\n<em>f</em> be the simple name of the getter denoted by <a>dart-mirrors.ClosureMirror.getField.fieldName</a>,\nThen this method will perform the getter invocation\n <em>o.f</em>\nin a scope that has access to the private members\nof <em>o</em> (if <em>o</em> is a class or library) or the private members of the\nclass of <em>o</em> (otherwise).</p>\n<p>If this mirror is an <a>dart-mirrors.InstanceMirror</a>, and <a>dart-mirrors.ClosureMirror.getField.fieldName</a> denotes an instance\nmethod on its reflectee, the result of the invocation is an instance\nmirror on a closure corresponding to that method.</p>\n<p>If this mirror is a <a>dart-mirrors.LibraryMirror</a>, and <a>dart-mirrors.ClosureMirror.getField.fieldName</a> denotes a top-level\nmethod in the corresponding library, the result of the invocation is an\ninstance mirror on a closure corresponding to that method.</p>\n<p>If this mirror is a <a>dart-mirrors.ClassMirror</a>, and <a>dart-mirrors.ClosureMirror.getField.fieldName</a> denotes a static method\nin the corresponding class, the result of the invocation is an instance\nmirror on a closure corresponding to that method.</p>\n<p>If the invocation returns a result <em>r</em>, this method returns\nthe result of calling <a href=\"*r*\">reflect</a>.\nIf the invocation causes a compilation error\nthe effect is the same as if a non-reflective compilation error\nhad been encountered.\nIf the invocation throws an exception <em>e</em> (that it does not catch)\nthis method throws <em>e</em>.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.ObjectMirror.getField","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.InstanceMirror","inner":[]}],"parameters":{"fieldName":{"name":"fieldName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Symbol","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"invoke":{"name":"invoke","qualifiedName":"dart-mirrors.ClosureMirror.invoke","comment":"<p>Invokes the named function and returns a mirror on the result.</p>\n<p>Let <em>o</em> be the object reflected by this mirror, let\n<em>f</em> be the simple name of the member denoted by <a>dart-mirrors.ClosureMirror.invoke.memberName</a>,\nlet <em>a1, ..., an</em> be the elements of <a>dart-mirrors.ClosureMirror.invoke.positionalArguments</a>\nlet <em>k1, ..., km</em> be the identifiers denoted by the elements of\nnamedArguments.keys\nand let <em>v1, ..., vm</em> be the elements of namedArguments.values.\nThen this method will perform the method invocation\n <em>o.f(a1, ..., an, k1: v1, ..., km: vm)</em>\nin a scope that has access to the private members\nof <em>o</em> (if <em>o</em> is a class or library) or the private members of the\nclass of <em>o</em> (otherwise).\nIf the invocation returns a result <em>r</em>, this method returns\nthe result of calling <a href=\"*r*\">reflect</a>.\nIf the invocation causes a compilation error\nthe effect is the same as if a non-reflective compilation error\nhad been encountered.\nIf the invocation throws an exception <em>e</em> (that it does not catch)\nthis method throws <em>e</em>.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.ObjectMirror.invoke","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.InstanceMirror","inner":[]}],"parameters":{"memberName":{"name":"memberName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Symbol","inner":[]}],"value":null,"annotations":[]},"positionalArguments":{"name":"positionalArguments","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[]}],"value":null,"annotations":[]},"namedArguments":{"name":"namedArguments","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.Symbol","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-mirrors.ClosureMirror.noSuchMethod","comment":"<p><a>dart-mirrors.ClosureMirror.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-mirrors.ClosureMirror.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-mirrors.ClosureMirror.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-mirrors.ClosureMirror.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setField":{"name":"setField","qualifiedName":"dart-mirrors.ClosureMirror.setField","comment":"<p>Invokes a setter and returns a mirror on the result. The setter\nmay be either the implicit setter for a non-final field or a\nuser-defined setter method.</p>\n<p>Let <em>o</em> be the object reflected by this mirror, let\n<em>f</em> be the simple name of the getter denoted by <a>dart-mirrors.ClosureMirror.setField.fieldName</a>,\nand let <em>a</em> be the object bound to <a>dart-mirrors.ClosureMirror.setField.value</a>.\nThen this method will perform the setter invocation\n<em>o.f = a</em>\nin a scope that has access to the private members\nof <em>o</em> (if <em>o</em> is a class or library) or the private members of the\nclass of <em>o</em> (otherwise).\nIf the invocation returns a result <em>r</em>, this method returns\nthe result of calling <a href=\"[value]\">reflect</a>.\nIf the invocation causes a compilation error\nthe effect is the same as if a non-reflective compilation error\nhad been encountered.\nIf the invocation throws an exception <em>e</em> (that it does not catch)\nthis method throws <em>e</em>.</p>","commentFrom":"","inheritedFrom":"dart-mirrors.ObjectMirror.setField","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-mirrors.InstanceMirror","inner":[]}],"parameters":{"fieldName":{"name":"fieldName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Symbol","inner":[]}],"value":null,"annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"dart-mirrors.ClosureMirror.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}