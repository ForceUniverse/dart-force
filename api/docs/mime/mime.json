{"name":"mime","qualifiedName":"mime/mime","comment":"<p>Help for working with file format identifiers\nsuch as <code>text/html</code> and <code>image/png</code>.</p>\n<p>More details, including a list of types, are in the Wikipedia article\n<a href=\"http://en.wikipedia.org/wiki/Internet_media_type\">Internet media type</a>.\nFor information on installing and importing this library, see the\n<a href=\"http://pub.dartlang.org/packages/mime\">mime package on pub.dartlang.org</a>.</p>","variables":{},"functions":{"setters":{},"getters":{"defaultMagicNumbersMaxLength":{"name":"defaultMagicNumbersMaxLength","qualifiedName":"mime/mime.defaultMagicNumbersMaxLength","comment":"<p>The maximum number of bytes needed, to match all default magic-numbers.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"lookupMimeType":{"name":"lookupMimeType","qualifiedName":"mime/mime.lookupMimeType","comment":"<p>Extract the extension from <a>mime/mime.lookupMimeType.path</a> and use that for MIME-type lookup, using\nthe default extension map.</p>\n<p>If no matching MIME-type was found, <code>null</code> is returned.</p>\n<p>If <a>mime/mime.lookupMimeType.headerBytes</a> is present, a match for known magic-numbers will be\nperformed first. This allows the correct mime-type to be found, even though\na file have been saved using the wrong file-name extension. If less than\n<a>mime/mime.defaultMagicNumbersMaxLength</a> bytes was provided, some magic-numbers won't\nbe matched against.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"headerBytes":{"name":"headerBytes","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"MimeMultipart","qualifiedName":"mime/mime.MimeMultipart","preview":"<p>A Mime Multipart class representing each part parsed by\nMimeMultipartTransformer. The data is streamed in as it become available.</p>"},{"name":"MimeMultipartTransformer","qualifiedName":"mime/mime.MimeMultipartTransformer","preview":"<p>Parser for MIME multipart types of data as described in RFC 2046\nsection 5.1.1. The data is transformed into <a>mime/mime.MimeMultipart</a> objects, each\nof them streaming the multipart data.</p>"},{"name":"MimeTypeResolver","qualifiedName":"mime/mime.MimeTypeResolver","preview":"<p>MIME-type resolver class, used to customize the lookup of mime-types.</p>"}],"typedef":{},"error":[{"name":"MimeMultipartException","qualifiedName":"mime/mime.MimeMultipartException"}]},"packageName":"mime","packageIntro":""}