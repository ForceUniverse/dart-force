{"name":"bignum","qualifiedName":"bignum/bignum","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"Barrett","qualifiedName":"bignum/bignum.Barrett","preview":"<p>Barrett modular reduction</p>"},{"name":"BigInteger","qualifiedName":"bignum/bignum.BigInteger","preview":"<p>Basic dart <a>bignum/bignum.BigInteger</a> class. Implementation works across\ndart and dart2js.</p>"},{"name":"Classic","qualifiedName":"bignum/bignum.Classic","preview":"<p>Modular reduction using \"classic\" algorithm on <a>bignum/bignum.BigInteger</a></p>"},{"name":"JSArray","qualifiedName":"bignum/bignum.JSArray","preview":"<p>This class wraps a Dart List and provides a JS-like behaviour.\ni.e. Storing an out-of-bounds element grows the list automatically.</p>"},{"name":"Montgomery","qualifiedName":"bignum/bignum.Montgomery","preview":"<p>Montgomery reduction on <a>bignum/bignum.BigInteger</a></p>"},{"name":"NullExp","qualifiedName":"bignum/bignum.NullExp"}],"typedef":{},"error":[]},"packageName":"bignum","packageIntro":"<h1>dart-bignum</h1>\n<p>BigInteger is under construction. </p>\n<h2>Getting Started</h2>\n<p>Create a Dart project and add a <strong>pubspec.yaml</strong> file to it</p>\n<h4>pub.dartlang.org</h4>\n<pre><code>dependencies:\n  bignum: any\n</code></pre>\n<h4>git</h4>\n<pre><code>dependencies:\n  bignum:\n    git: git://github.com/Dartist/dart-bignum.git\n</code></pre>\n<p>and run <strong>pub install</strong> to install <strong>bignum</strong> (including its dependencies). Now add import</p>\n<pre><code>import 'package:bignum/bignum.dart';\n</code></pre>\n<h3>Example</h3>\n<h4>Code</h4>\n<pre><code>import 'package:bignum/bignum.dart';\nvoid main() {\n  BigInteger x = new BigInteger(\"12341234123412341234\");\n  BigInteger y = new BigInteger(\"100\");\n  var z = x * y * x;\n  print(\"base 10: z = ${z.toString()}\");\n  print(\"base 16: z = ${z.toString(16)}\");\n  print(\"base 2: z = ${z.toString(2)}\");\n}\n</code></pre>\n<h4>Output</h4>\n<pre><code>base 10: z = 15230605968887717854389148085725664275600\nbase 16: z = 2cc23c02bae6a6051a5ce673189c3a6c90\nbase 2: z = 10110011000010001111000000001010111010111001101010011000000101000110100101110011100110011100110001100010011100001110100110110010010000\n</code></pre>\n<h3>Sample</h3>\n<p><a href=\"example/Tobase/tobase.html\">Tobase</a>. The sample currently has known issues with bitwise operators. </p>\n<h3>Caveats</h3>\n<p>Currently few known bugs exist while compiling from dart2js. One is working with bitwise operators, the internal implementation of shift operators with dart2js does not handle the same way as the VM. Most of this code was ported from v8 <a href=\"http://goo.gl/jTEfH\">benchmark suite</a>. <a href=\"http://www-cs-students.stanford.edu/~tjw/jsbn/\">Tom Wu</a> is to thank for the core javascript implementation and the v8 team for optimizations on different javascript virtual machines. </p>\n<h3>Bugs &amp; Testing</h3>\n<p>Please feel free to add <a href=\"https://github.com/financeCoding/dart-bignum/issues\">issues</a> on github issue tracker, we would like to provide a solid library for the community to use. </p>\n<h3>References</h3><ul><li><a href=\"http://biginteger.codeplex.com/\">BigInteger C#</a></li><li><a href=\"http://developer.classpath.org/doc/java/math/BigInteger-source.html\">BigInteger Java</a></li><li><a href=\"http://libtom.org/?page=features&amp;newsitems=5&amp;whatfile=ltm\">LibTomMath</a></li><li><a href=\"https://github.com/jtobey/javascript-bignum\">javascript-bignum</a></li><li><a href=\"http://www.leemon.com/crypto/BigInt.js\">BigInt.js</a></li><li><a href=\"http://www.tc.umn.edu/~ringx004/mapm-main.html\">MAPM</a></li><li><a href=\"http://code.google.com/p/v8/source/browse/branches/bleeding_edge/benchmarks/crypto.js\">crypto.js</a></li></ul>"}