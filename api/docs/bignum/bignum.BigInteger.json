{"name":"BigInteger","qualifiedName":"bignum/bignum.BigInteger","comment":"<p>Basic dart <a>bignum/bignum.BigInteger</a> class. Implementation works across\ndart and dart2js.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"BI_DB":{"name":"BI_DB","qualifiedName":"bignum/bignum.BigInteger.BI_DB","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_DM":{"name":"BI_DM","qualifiedName":"bignum/bignum.BigInteger.BI_DM","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_DV":{"name":"BI_DV","qualifiedName":"bignum/bignum.BigInteger.BI_DV","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_F1":{"name":"BI_F1","qualifiedName":"bignum/bignum.BigInteger.BI_F1","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_F2":{"name":"BI_F2","qualifiedName":"bignum/bignum.BigInteger.BI_F2","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_FP":{"name":"BI_FP","qualifiedName":"bignum/bignum.BigInteger.BI_FP","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_FV":{"name":"BI_FV","qualifiedName":"bignum/bignum.BigInteger.BI_FV","comment":"","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"BI_RC":{"name":"BI_RC","qualifiedName":"bignum/bignum.BigInteger.BI_RC","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.Map","inner":[]}],"annotations":[]},"BI_RM":{"name":"BI_RM","qualifiedName":"bignum/bignum.BigInteger.BI_RM","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"am":{"name":"am","qualifiedName":"bignum/bignum.BigInteger.am","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.Function","inner":[]}],"annotations":[]},"array":{"name":"array","qualifiedName":"bignum/bignum.BigInteger.array","comment":"<p>Internal data structure of <a>bignum/bignum.BigInteger</a> implementation.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"bignum/bignum.JSArray","inner":[{"outer":"dart-core.int","inner":[]}]}],"annotations":[]},"canary":{"name":"canary","qualifiedName":"bignum/bignum.BigInteger.canary","comment":"<p>JavaScript engine analysis</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"dbits":{"name":"dbits","qualifiedName":"bignum/bignum.BigInteger.dbits","comment":"<p>Bits per digit</p>","final":false,"static":true,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"s":{"name":"s","qualifiedName":"bignum/bignum.BigInteger.s","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"t":{"name":"t","qualifiedName":"bignum/bignum.BigInteger.t","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"ONE":{"name":"ONE","qualifiedName":"bignum/bignum.BigInteger.ONE","comment":"","commentFrom":"bignum.BigInteger.ONE","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"THREE":{"name":"THREE","qualifiedName":"bignum/bignum.BigInteger.THREE","comment":"","commentFrom":"bignum.BigInteger.THREE","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"TWO":{"name":"TWO","qualifiedName":"bignum/bignum.BigInteger.TWO","comment":"","commentFrom":"bignum.BigInteger.TWO","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"ZERO":{"name":"ZERO","qualifiedName":"bignum/bignum.BigInteger.ZERO","comment":"","commentFrom":"bignum.BigInteger.ZERO","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"lowestSetBit":{"name":"lowestSetBit","qualifiedName":"bignum/bignum.BigInteger.lowestSetBit","comment":"","commentFrom":"bignum.BigInteger.lowestSetBit","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"bignum/bignum.BigInteger.BigInteger-","comment":"<p>Constructor of <a>bignum/bignum.BigInteger</a></p>\n<p>Constructor can be called in mutiple ways</p>\n<p>1) Passing byte array <a>dart-core.List</a>\n   var x = new BigInteger(0x5);\n   x.toString() == \"5\";</p>\n<p>2) Passing <a>dart-core.int</a>\n   int i = 5;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";</p>\n<p>3) Passing <a>dart-core.num</a>\n   num i = 5;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";</p>\n<p>4) Passing <a>dart-core.double</a>\n   double i = 5.0;\n   var x = new BigInteger(i);\n   x.toString() == \"5\";</p>\n<p>5) Passing <a>dart-core.String</a> with optional base <a>dart-core.int</a>\n   String s = \"5\";\n   var x = new BigInteger(s);\n   x.toString() == \"5\";</p>\n<p>   String s = \"beef\";\n   var x = new BigInteger(s);\n   x.toString() == \"beef\";</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"c":{"name":"c","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"fromBytes":{"name":"fromBytes","qualifiedName":"bignum/bignum.BigInteger.BigInteger-fromBytes","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"signum":{"name":"signum","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"magnitude":{"name":"magnitude","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{"%":{"name":"%","qualifiedName":"bignum/bignum.BigInteger.%","comment":"","commentFrom":"bignum.BigInteger.%","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"&":{"name":"&","qualifiedName":"bignum/bignum.BigInteger.&","comment":"","commentFrom":"bignum.BigInteger.&","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"*":{"name":"*","qualifiedName":"bignum/bignum.BigInteger.*","comment":"","commentFrom":"bignum.BigInteger.*","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"+":{"name":"+","qualifiedName":"bignum/bignum.BigInteger.+","comment":"","commentFrom":"bignum.BigInteger.+","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"-":{"name":"-","qualifiedName":"bignum/bignum.BigInteger.-","comment":"","commentFrom":"bignum.BigInteger.-","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"/":{"name":"/","qualifiedName":"bignum/bignum.BigInteger./","comment":"","commentFrom":"bignum.BigInteger./","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"<":{"name":"<","qualifiedName":"bignum/bignum.BigInteger.<","comment":"","commentFrom":"bignum.BigInteger.<","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"<<":{"name":"<<","qualifiedName":"bignum/bignum.BigInteger.<<","comment":"","commentFrom":"bignum.BigInteger.<<","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"shiftAmount":{"name":"shiftAmount","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"<=":{"name":"<=","qualifiedName":"bignum/bignum.BigInteger.<=","comment":"","commentFrom":"bignum.BigInteger.<=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"==":{"name":"==","qualifiedName":"bignum/bignum.BigInteger.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>bignum/bignum.BigInteger.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>bignum/bignum.BigInteger.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},">":{"name":">","qualifiedName":"bignum/bignum.BigInteger.>","comment":"","commentFrom":"bignum.BigInteger.>","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},">=":{"name":">=","qualifiedName":"bignum/bignum.BigInteger.>=","comment":"","commentFrom":"bignum.BigInteger.>=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},">>":{"name":">>","qualifiedName":"bignum/bignum.BigInteger.>>","comment":"","commentFrom":"bignum.BigInteger.>>","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"shiftAmount":{"name":"shiftAmount","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"^":{"name":"^","qualifiedName":"bignum/bignum.BigInteger.^","comment":"","commentFrom":"bignum.BigInteger.^","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"unary-":{"name":"unary-","qualifiedName":"bignum/bignum.BigInteger.unary-","comment":"","commentFrom":"bignum.BigInteger.unary-","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"|":{"name":"|","qualifiedName":"bignum/bignum.BigInteger.|","comment":"","commentFrom":"bignum.BigInteger.|","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"~":{"name":"~","qualifiedName":"bignum/bignum.BigInteger.~","comment":"","commentFrom":"bignum.BigInteger.~","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"~/":{"name":"~/","qualifiedName":"bignum/bignum.BigInteger.~/","comment":"","commentFrom":"bignum.BigInteger.~/","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"abs":{"name":"abs","qualifiedName":"bignum/bignum.BigInteger.abs","comment":"<p>|this|</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"add":{"name":"add","qualifiedName":"bignum/bignum.BigInteger.add","comment":"<p>this + a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addTo":{"name":"addTo","qualifiedName":"bignum/bignum.BigInteger.addTo","comment":"<p>r = this + a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"and":{"name":"and","qualifiedName":"bignum/bignum.BigInteger.and","comment":"","commentFrom":"bignum.BigInteger.and","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"andNot":{"name":"andNot","qualifiedName":"bignum/bignum.BigInteger.andNot","comment":"","commentFrom":"bignum.BigInteger.andNot","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"bitCount":{"name":"bitCount","qualifiedName":"bignum/bignum.BigInteger.bitCount","comment":"<p>return number of set bits</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"bitLength":{"name":"bitLength","qualifiedName":"bignum/bignum.BigInteger.bitLength","comment":"<p>return the number of bits in this</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"bitwiseTo":{"name":"bitwiseTo","qualifiedName":"bignum/bignum.BigInteger.bitwiseTo","comment":"<p>r = this op a (bitwise)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]},"op":{"name":"op","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"byteValue":{"name":"byteValue","qualifiedName":"bignum/bignum.BigInteger.byteValue","comment":"<p>return value as byte</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"cbit":{"name":"cbit","qualifiedName":"bignum/bignum.BigInteger.cbit","comment":"<p>return number of 1 bits in x</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"changeBit":{"name":"changeBit","qualifiedName":"bignum/bignum.BigInteger.changeBit","comment":"<p>this op (1&lt;&lt;n)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"op":{"name":"op","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"chunkSize":{"name":"chunkSize","qualifiedName":"bignum/bignum.BigInteger.chunkSize","comment":"<p>return x s.t. r^x &lt; DV</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"clamp":{"name":"clamp","qualifiedName":"bignum/bignum.BigInteger.clamp","comment":"<p>clamp off excess high words</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"clearBit":{"name":"clearBit","qualifiedName":"bignum/bignum.BigInteger.clearBit","comment":"<p>this &amp; ~(1&lt;&lt;n)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"clone":{"name":"clone","qualifiedName":"bignum/bignum.BigInteger.clone","comment":"<p>clone</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"compareTo":{"name":"compareTo","qualifiedName":"bignum/bignum.BigInteger.compareTo","comment":"<p>return + if this > <a>bignum/bignum.BigInteger.compareTo.a</a>, - if this &lt; <a>bignum/bignum.BigInteger.compareTo.a</a>, 0 if equal *</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"copyTo":{"name":"copyTo","qualifiedName":"bignum/bignum.BigInteger.copyTo","comment":"<p>copy this to <a>bignum/bignum.BigInteger.copyTo.r</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"dAddOffset":{"name":"dAddOffset","qualifiedName":"bignum/bignum.BigInteger.dAddOffset","comment":"<p>this += n &lt;&lt; w words, this >= 0</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"w":{"name":"w","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"dMultiply":{"name":"dMultiply","qualifiedName":"bignum/bignum.BigInteger.dMultiply","comment":"<p>this *= n, this >= 0, 1 &lt; n &lt; <a>bignum/bignum.BigInteger.BI_DV</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"divRemTo":{"name":"divRemTo","qualifiedName":"bignum/bignum.BigInteger.divRemTo","comment":"<p>divide this by m, quotient and remainder to q, r (HAC 14.20)\nr != q, this != m.  q or r may be null.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"m":{"name":"m","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]},"q":{"name":"q","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"divide":{"name":"divide","qualifiedName":"bignum/bignum.BigInteger.divide","comment":"<p>this / a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"divideAndRemainder":{"name":"divideAndRemainder","qualifiedName":"bignum/bignum.BigInteger.divideAndRemainder","comment":"<p>this/a, this%a returns Map&lt;BigInteger>\n0 = this/a\n1 = this%a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.int","inner":[]},{"outer":"bignum/bignum.BigInteger","inner":[]}]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"dlShiftTo":{"name":"dlShiftTo","qualifiedName":"bignum/bignum.BigInteger.dlShiftTo","comment":"<p>r = this &lt;&lt; n*DB</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"drShiftTo":{"name":"drShiftTo","qualifiedName":"bignum/bignum.BigInteger.drShiftTo","comment":"<p>r = this >> n*DB</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"equals":{"name":"equals","qualifiedName":"bignum/bignum.BigInteger.equals","comment":"","commentFrom":"bignum.BigInteger.equals","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"exp":{"name":"exp","qualifiedName":"bignum/bignum.BigInteger.exp","comment":"<p>this^e, e &lt; 2^32, doing sqr and mul with \"r\" (HAC 14.79)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"e":{"name":"e","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"z":{"name":"z","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"flipBit":{"name":"flipBit","qualifiedName":"bignum/bignum.BigInteger.flipBit","comment":"<p>this ^ (1&lt;&lt;n)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"fromInt":{"name":"fromInt","qualifiedName":"bignum/bignum.BigInteger.fromInt","comment":"<p>set from integer value <a>bignum/bignum.BigInteger.fromInt.x</a>, -<a>bignum/bignum.BigInteger.BI_DV</a> &lt;= <a>bignum/bignum.BigInteger.fromInt.x</a> &lt; <a>bignum/bignum.BigInteger.BI_DV</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"fromRadix":{"name":"fromRadix","qualifiedName":"bignum/bignum.BigInteger.fromRadix","comment":"<p>convert from radix string</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"s":{"name":"s","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"fromString":{"name":"fromString","qualifiedName":"bignum/bignum.BigInteger.fromString","comment":"<p>set from string <a>bignum/bignum.BigInteger.fromString.s</a> and radix <a>bignum/bignum.BigInteger.fromString.b</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"s":{"name":"s","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"gcd":{"name":"gcd","qualifiedName":"bignum/bignum.BigInteger.gcd","comment":"<p>gcd(this,a) (HAC 14.54)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getLowestSetBit":{"name":"getLowestSetBit","qualifiedName":"bignum/bignum.BigInteger.getLowestSetBit","comment":"<p>returns index of lowest 1-bit (or -1 if none)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"intValue":{"name":"intValue","qualifiedName":"bignum/bignum.BigInteger.intValue","comment":"<p>return value as integer</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"invDigit":{"name":"invDigit","qualifiedName":"bignum/bignum.BigInteger.invDigit","comment":"<p>return \"-1/this % 2^DB\"; useful for Mont. reduction\njustification:</p>\n<pre><code>    xy == 1 (mod m)\n    xy =  1+km\n</code></pre>\n<p>  xy(2-xy) = (1+km)(1-km)\nxy(2-xy) = 1-k^2m^2\nxy(2-xy) == 1 (mod m^2)\nif y is 1/x mod m, then y(2-xy) is 1/x mod m^2\nshould reduce x and y(2-xy) by m^2 at each step to keep size bounded.\nJS multiply \"overflows\" differently from C/C++, so care is needed here.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"isEven":{"name":"isEven","qualifiedName":"bignum/bignum.BigInteger.isEven","comment":"<p>true iff this is even</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"isOdd":{"name":"isOdd","qualifiedName":"bignum/bignum.BigInteger.isOdd","comment":"<p>true iff this is off</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"isProbablePrime":{"name":"isProbablePrime","qualifiedName":"bignum/bignum.BigInteger.isProbablePrime","comment":"<p>test primality with certainty >= 1-.5^t</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"t":{"name":"t","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lShiftTo":{"name":"lShiftTo","qualifiedName":"bignum/bignum.BigInteger.lShiftTo","comment":"<p>r = this &lt;&lt; n</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"lbit":{"name":"lbit","qualifiedName":"bignum/bignum.BigInteger.lbit","comment":"<p>return index of lowest 1-bit in x, x &lt; 2^31</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"max":{"name":"max","qualifiedName":"bignum/bignum.BigInteger.max","comment":"","commentFrom":"bignum.BigInteger.max","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"millerRabin":{"name":"millerRabin","qualifiedName":"bignum/bignum.BigInteger.millerRabin","comment":"<p>true if probably prime (HAC 4.24, Miller-Rabin)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"t":{"name":"t","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"min":{"name":"min","qualifiedName":"bignum/bignum.BigInteger.min","comment":"","commentFrom":"bignum.BigInteger.min","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"mod":{"name":"mod","qualifiedName":"bignum/bignum.BigInteger.mod","comment":"<p>this mod a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"modInt":{"name":"modInt","qualifiedName":"bignum/bignum.BigInteger.modInt","comment":"<p>this % n, n &lt; 2^26</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"modInverse":{"name":"modInverse","qualifiedName":"bignum/bignum.BigInteger.modInverse","comment":"<p>1/this % m (HAC 14.61)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"m":{"name":"m","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"modPow":{"name":"modPow","qualifiedName":"bignum/bignum.BigInteger.modPow","comment":"<p>this^e % m (HAC 14.85)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"e":{"name":"e","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]},"m":{"name":"m","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"modPowInt":{"name":"modPowInt","qualifiedName":"bignum/bignum.BigInteger.modPowInt","comment":"<p>this^e % m, 0 &lt;= e &lt; 2^32</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"e":{"name":"e","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"m":{"name":"m","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"multiply":{"name":"multiply","qualifiedName":"bignum/bignum.BigInteger.multiply","comment":"<p>this * a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"multiplyLowerTo":{"name":"multiplyLowerTo","qualifiedName":"bignum/bignum.BigInteger.multiplyLowerTo","comment":"<p>r = lower n words of \"this * a\", a.t &lt;= n\n\"this\" should be the larger one if appropriate.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"multiplyTo":{"name":"multiplyTo","qualifiedName":"bignum/bignum.BigInteger.multiplyTo","comment":"<p>r = this * a, r != this,a (HAC 14.12)\nthis should be the larger one if appropriate.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"multiplyUpperTo":{"name":"multiplyUpperTo","qualifiedName":"bignum/bignum.BigInteger.multiplyUpperTo","comment":"<p>r = \"this * a\" without lower n words, n > 0\n\"this\" should be the larger one if appropriate.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"nbi":{"name":"nbi","qualifiedName":"bignum/bignum.BigInteger.nbi","comment":"<p>Create a new <a>bignum/bignum.BigInteger</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]},"nbits":{"name":"nbits","qualifiedName":"bignum/bignum.BigInteger.nbits","comment":"<p>returns bit length of the integer <a>bignum/bignum.BigInteger.nbits.x</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"nbv":{"name":"nbv","qualifiedName":"bignum/bignum.BigInteger.nbv","comment":"<p>return <a>bignum/bignum.BigInteger</a> initialized to <a>bignum/bignum.BigInteger.nbv.i</a></p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"i":{"name":"i","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"negate_op":{"name":"negate_op","qualifiedName":"bignum/bignum.BigInteger.negate_op","comment":"<p>-this</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"not":{"name":"not","qualifiedName":"bignum/bignum.BigInteger.not","comment":"<p>~this</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"op_and":{"name":"op_and","qualifiedName":"bignum/bignum.BigInteger.op_and","comment":"<p>this &amp; a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"op_andnot":{"name":"op_andnot","qualifiedName":"bignum/bignum.BigInteger.op_andnot","comment":"<p>this &amp; ~a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"op_or":{"name":"op_or","qualifiedName":"bignum/bignum.BigInteger.op_or","comment":"<p>this | a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"op_xor":{"name":"op_xor","qualifiedName":"bignum/bignum.BigInteger.op_xor","comment":"<p>this ^ a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"or":{"name":"or","qualifiedName":"bignum/bignum.BigInteger.or","comment":"","commentFrom":"bignum.BigInteger.or","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"pow":{"name":"pow","qualifiedName":"bignum/bignum.BigInteger.pow","comment":"<p>this^e</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"e":{"name":"e","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"rShiftTo":{"name":"rShiftTo","qualifiedName":"bignum/bignum.BigInteger.rShiftTo","comment":"<p>r = this >> n</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"remainder":{"name":"remainder","qualifiedName":"bignum/bignum.BigInteger.remainder","comment":"<p>this % a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"setBit":{"name":"setBit","qualifiedName":"bignum/bignum.BigInteger.setBit","comment":"<p>this | (1&lt;&lt;n)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"shiftLeft":{"name":"shiftLeft","qualifiedName":"bignum/bignum.BigInteger.shiftLeft","comment":"<p>this &lt;&lt; n</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"shiftRight":{"name":"shiftRight","qualifiedName":"bignum/bignum.BigInteger.shiftRight","comment":"<p>this >> n</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"shortValue":{"name":"shortValue","qualifiedName":"bignum/bignum.BigInteger.shortValue","comment":"<p>return value as short (assumes DB>=16)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"signum":{"name":"signum","qualifiedName":"bignum/bignum.BigInteger.signum","comment":"<p>0 if this == 0, 1 if this > 0</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"squareTo":{"name":"squareTo","qualifiedName":"bignum/bignum.BigInteger.squareTo","comment":"<p>r = this^2, r != this (HAC 14.16)</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"subTo":{"name":"subTo","qualifiedName":"bignum/bignum.BigInteger.subTo","comment":"<p>r = this - a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"r":{"name":"r","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"subtract":{"name":"subtract","qualifiedName":"bignum/bignum.BigInteger.subtract","comment":"<p>this - a</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"bignum/bignum.BigInteger","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"testBit":{"name":"testBit","qualifiedName":"bignum/bignum.BigInteger.testBit","comment":"<p>true iff nth bit is set</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toByteArray":{"name":"toByteArray","qualifiedName":"bignum/bignum.BigInteger.toByteArray","comment":"<p>convert to bigendian byte array <a>dart-core.List</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{},"annotations":[]},"toRadix":{"name":"toRadix","qualifiedName":"bignum/bignum.BigInteger.toRadix","comment":"<p>convert to radix string , http://dartbug.com/461 num only supports up to radix 16</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"b":{"name":"b","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"10","annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"bignum/bignum.BigInteger.toString","comment":"<p>return string representation in given radix <a>bignum/bignum.BigInteger.toString.b</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"b":{"name":"b","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"xor":{"name":"xor","qualifiedName":"bignum/bignum.BigInteger.xor","comment":"","commentFrom":"bignum.BigInteger.xor","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"a":{"name":"a","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"bignum/bignum.BigInteger.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>bignum/bignum.BigInteger.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"bignum/bignum.BigInteger.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"bignum/bignum.BigInteger.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>bignum/bignum.BigInteger.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>bignum/bignum.BigInteger.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"bignum/bignum.BigInteger.noSuchMethod","comment":"<p><a>bignum/bignum.BigInteger.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>bignum/bignum.BigInteger.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>bignum/bignum.BigInteger.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>bignum/bignum.BigInteger.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"bignum/bignum.BigInteger.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}