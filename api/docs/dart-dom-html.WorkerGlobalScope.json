{"name":"WorkerGlobalScope","qualifiedName":"dart-dom-html.WorkerGlobalScope","comment":"","isAbstract":false,"superclass":"dart-dom-html.EventTarget","implements":["dart-dom-html.WindowBase64"],"subclass":["dart-dom-html.DedicatedWorkerGlobalScope","dart-dom-html.ServiceWorkerGlobalScope","dart-dom-html.SharedWorkerGlobalScope"],"variables":{"PERSISTENT":{"name":"PERSISTENT","qualifiedName":"dart-dom-html.WorkerGlobalScope.PERSISTENT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.PERSISTENT'"]},{"name":"metadata.Experimental","parameters":[]}]},"TEMPORARY":{"name":"TEMPORARY","qualifiedName":"dart-dom-html.WorkerGlobalScope.TEMPORARY","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.TEMPORARY'"]},{"name":"metadata.Experimental","parameters":[]}]},"console":{"name":"console","qualifiedName":"dart-dom-html.WorkerGlobalScope.console","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.WorkerConsole","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.console'"]},{"name":"metadata.Experimental","parameters":[]}]},"crypto":{"name":"crypto","qualifiedName":"dart-dom-html.WorkerGlobalScope.crypto","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.WorkerCrypto","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.crypto'"]},{"name":"metadata.Experimental","parameters":[]}]},"errorEvent":{"name":"errorEvent","qualifiedName":"dart-dom-html.WorkerGlobalScope.errorEvent","comment":"<p>Static factory designed to expose <code>error</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.WorkerGlobalScope</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.errorEvent'"]},{"name":"metadata.Experimental","parameters":[]}]},"indexedDB":{"name":"indexedDB","qualifiedName":"dart-dom-html.WorkerGlobalScope.indexedDB","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-indexed_db.IdbFactory","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.indexedDB'"]},{"name":"metadata.Experimental","parameters":[]}]},"location":{"name":"location","qualifiedName":"dart-dom-html.WorkerGlobalScope.location","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html._WorkerLocation","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.location'"]},{"name":"metadata.Experimental","parameters":[]}]},"navigator":{"name":"navigator","qualifiedName":"dart-dom-html.WorkerGlobalScope.navigator","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html._WorkerNavigator","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.navigator'"]},{"name":"metadata.Experimental","parameters":[]}]},"performance":{"name":"performance","qualifiedName":"dart-dom-html.WorkerGlobalScope.performance","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.WorkerPerformance","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.performance'"]},{"name":"metadata.Experimental","parameters":[]}]},"self":{"name":"self","qualifiedName":"dart-dom-html.WorkerGlobalScope.self","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.WorkerGlobalScope","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.self'"]},{"name":"metadata.Experimental","parameters":[]}]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"onError":{"name":"onError","qualifiedName":"dart-dom-html.WorkerGlobalScope.onError","comment":"<p>Stream of <code>error</code> events handled by this <a>dart-dom-html.WorkerGlobalScope</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.onerror'"]},{"name":"metadata.Experimental","parameters":[]}]}},"constructors":{},"operators":{},"methods":{"atob":{"name":"atob","qualifiedName":"dart-dom-html.WorkerGlobalScope.atob","comment":"","commentFrom":"dart-dom-html.WindowBase64.atob","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"string":{"name":"string","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.atob'"]},{"name":"metadata.Experimental","parameters":[]}]},"btoa":{"name":"btoa","qualifiedName":"dart-dom-html.WorkerGlobalScope.btoa","comment":"","commentFrom":"dart-dom-html.WindowBase64.btoa","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"string":{"name":"string","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.btoa'"]},{"name":"metadata.Experimental","parameters":[]}]},"close":{"name":"close","qualifiedName":"dart-dom-html.WorkerGlobalScope.close","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.close","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.close'"]},{"name":"metadata.Experimental","parameters":[]}]},"openDatabase":{"name":"openDatabase","qualifiedName":"dart-dom-html.WorkerGlobalScope.openDatabase","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.openDatabase","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-web_sql.SqlDatabase","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"version":{"name":"version","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"displayName":{"name":"displayName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"estimatedSize":{"name":"estimatedSize","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"creationCallback":{"name":"creationCallback","optional":true,"named":false,"default":false,"type":[{"outer":"dart-dom-html.DatabaseCallback","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.openDatabase'"]},{"name":"metadata.Experimental","parameters":[]}]},"openDatabaseSync":{"name":"openDatabaseSync","qualifiedName":"dart-dom-html.WorkerGlobalScope.openDatabaseSync","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.openDatabaseSync","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html._DatabaseSync","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"version":{"name":"version","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"displayName":{"name":"displayName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"estimatedSize":{"name":"estimatedSize","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"creationCallback":{"name":"creationCallback","optional":true,"named":false,"default":false,"type":[{"outer":"dart-dom-html.DatabaseCallback","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.openDatabaseSync'"]},{"name":"metadata.Experimental","parameters":[]}]},"requestFileSystemSync":{"name":"requestFileSystemSync","qualifiedName":"dart-dom-html.WorkerGlobalScope.requestFileSystemSync","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.requestFileSystemSync","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html._DOMFileSystemSync","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"size":{"name":"size","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.webkitRequestFileSystemSync'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Experimental","parameters":[]},{"name":"metadata.Experimental","parameters":[]}]},"resolveLocalFileSystemSyncUrl":{"name":"resolveLocalFileSystemSyncUrl","qualifiedName":"dart-dom-html.WorkerGlobalScope.resolveLocalFileSystemSyncUrl","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.resolveLocalFileSystemSyncUrl","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html._EntrySync","inner":[]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.webkitResolveLocalFileSystemSyncURL'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Experimental","parameters":[]},{"name":"metadata.Experimental","parameters":[]}]},"webkitRequestFileSystem":{"name":"webkitRequestFileSystem","qualifiedName":"dart-dom-html.WorkerGlobalScope.webkitRequestFileSystem","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.webkitRequestFileSystem","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.FileSystem","inner":[]}]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"size":{"name":"size","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.webkitRequestFileSystem'"]},{"name":"metadata.Experimental","parameters":[]}]},"webkitResolveLocalFileSystemUrl":{"name":"webkitResolveLocalFileSystemUrl","qualifiedName":"dart-dom-html.WorkerGlobalScope.webkitResolveLocalFileSystemUrl","comment":"","commentFrom":"dart-dom-html.WorkerGlobalScope.webkitResolveLocalFileSystemUrl","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.Entry","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope.webkitResolveLocalFileSystemURL'"]},{"name":"metadata.Experimental","parameters":[]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-html.WorkerGlobalScope.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-html.WorkerGlobalScope.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"on":{"name":"on","qualifiedName":"dart-dom-html.WorkerGlobalScope.on","comment":"<p>This is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.</p>","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.on","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Events","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-html.WorkerGlobalScope.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-html.WorkerGlobalScope.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-html.WorkerGlobalScope.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-html.WorkerGlobalScope.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"addEventListener":{"name":"addEventListener","qualifiedName":"dart-dom-html.WorkerGlobalScope.addEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.addEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.addEventListener'"]}]},"atob":{"name":"atob","qualifiedName":"dart-dom-html.WorkerGlobalScope.atob","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.WindowBase64.atob","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"string":{"name":"string","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"btoa":{"name":"btoa","qualifiedName":"dart-dom-html.WorkerGlobalScope.btoa","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.WindowBase64.btoa","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"string":{"name":"string","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"dispatchEvent":{"name":"dispatchEvent","qualifiedName":"dart-dom-html.WorkerGlobalScope.dispatchEvent","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.dispatchEvent","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.dispatchEvent'"]}]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-html.WorkerGlobalScope.noSuchMethod","comment":"<p><a>dart-dom-html.WorkerGlobalScope.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-html.WorkerGlobalScope.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-html.WorkerGlobalScope.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-html.WorkerGlobalScope.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeEventListener":{"name":"removeEventListener","qualifiedName":"dart-dom-html.WorkerGlobalScope.removeEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.removeEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.removeEventListener'"]}]},"toString":{"name":"toString","qualifiedName":"dart-dom-html.WorkerGlobalScope.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'WorkerGlobalScope'"]},{"name":"metadata.Experimental","parameters":[]}],"generics":{}}