{"name":"Function","qualifiedName":"dart-core.Function","comment":"<p>The base class for all function types.</p>\n<p>A function value, or an instance of a class with a \"call\" method, is a\nsubtype of a function type, and as such, a subtype of <a>dart-core.Function</a>.</p>","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"apply":{"name":"apply","qualifiedName":"dart-core.Function.apply","comment":"<p>Dynamically call <a>dart-core.Function.apply.function</a> with the specified arguments.</p>\n<p>Acts the same as calling function with positional arguments\ncorresponding to the elements of <a>dart-core.Function.apply.positionalArguments</a> and\nnamed arguments corresponding to the elements of <a>dart-core.Function.apply.namedArguments</a>.</p>\n<p>This includes giving the same errors if <a>dart-core.Function.apply.function</a> isn't callable or\nif it expects different parameters.</p>\n<p>Example:</p>\n<pre><code>  Map&lt;Symbol, dynamic&gt; namedArguments = new Map&lt;Symbol, dynamic&gt;();\n  namedArguments[const Symbol(\"f\")] = 4;\n  namedArguments[const Symbol(\"g\")] = 5;\n  Function.apply(foo, [1,2,3], namedArguments);\n</code></pre>\n<p>gives exactly the same result as</p>\n<pre><code>  foo(1, 2, 3, f: 4, g: 5).\n</code></pre>\n<p>If <a>dart-core.Function.apply.positionalArguments</a> is null, it's considered an empty list.\nIf <a>dart-core.Function.apply.namedArguments</a> is omitted or null, it is considered an empty map.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"function":{"name":"function","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[]},"positionalArguments":{"name":"positionalArguments","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[]}],"value":null,"annotations":[]},"namedArguments":{"name":"namedArguments","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.Symbol","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-core.Function.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-core.Function.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-core.Function.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-core.Function.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-core.Function.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-core.Function.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-core.Function.noSuchMethod","comment":"<p><a>dart-core.Function.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-core.Function.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-core.Function.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-core.Function.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"dart-core.Function.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}