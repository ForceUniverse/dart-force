{"name":"Matrix","qualifiedName":"dart-dom-svg.Matrix","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"a":{"name":"a","qualifiedName":"dart-dom-svg.Matrix.a","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.a'"]}]},"b":{"name":"b","qualifiedName":"dart-dom-svg.Matrix.b","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.b'"]}]},"c":{"name":"c","qualifiedName":"dart-dom-svg.Matrix.c","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.c'"]}]},"d":{"name":"d","qualifiedName":"dart-dom-svg.Matrix.d","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.d'"]}]},"e":{"name":"e","qualifiedName":"dart-dom-svg.Matrix.e","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.e'"]}]},"f":{"name":"f","qualifiedName":"dart-dom-svg.Matrix.f","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.num","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.f'"]}]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"flipX":{"name":"flipX","qualifiedName":"dart-dom-svg.Matrix.flipX","comment":"","commentFrom":"dart-dom-svg.Matrix.flipX","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.flipX'"]}]},"flipY":{"name":"flipY","qualifiedName":"dart-dom-svg.Matrix.flipY","comment":"","commentFrom":"dart-dom-svg.Matrix.flipY","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.flipY'"]}]},"inverse":{"name":"inverse","qualifiedName":"dart-dom-svg.Matrix.inverse","comment":"","commentFrom":"dart-dom-svg.Matrix.inverse","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.inverse'"]}]},"multiply":{"name":"multiply","qualifiedName":"dart-dom-svg.Matrix.multiply","comment":"","commentFrom":"dart-dom-svg.Matrix.multiply","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"secondMatrix":{"name":"secondMatrix","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.multiply'"]}]},"rotate":{"name":"rotate","qualifiedName":"dart-dom-svg.Matrix.rotate","comment":"","commentFrom":"dart-dom-svg.Matrix.rotate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"angle":{"name":"angle","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.rotate'"]}]},"rotateFromVector":{"name":"rotateFromVector","qualifiedName":"dart-dom-svg.Matrix.rotateFromVector","comment":"","commentFrom":"dart-dom-svg.Matrix.rotateFromVector","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.rotateFromVector'"]}]},"scale":{"name":"scale","qualifiedName":"dart-dom-svg.Matrix.scale","comment":"","commentFrom":"dart-dom-svg.Matrix.scale","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"scaleFactor":{"name":"scaleFactor","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.scale'"]}]},"scaleNonUniform":{"name":"scaleNonUniform","qualifiedName":"dart-dom-svg.Matrix.scaleNonUniform","comment":"","commentFrom":"dart-dom-svg.Matrix.scaleNonUniform","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"scaleFactorX":{"name":"scaleFactorX","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]},"scaleFactorY":{"name":"scaleFactorY","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.scaleNonUniform'"]}]},"skewX":{"name":"skewX","qualifiedName":"dart-dom-svg.Matrix.skewX","comment":"","commentFrom":"dart-dom-svg.Matrix.skewX","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"angle":{"name":"angle","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.skewX'"]}]},"skewY":{"name":"skewY","qualifiedName":"dart-dom-svg.Matrix.skewY","comment":"","commentFrom":"dart-dom-svg.Matrix.skewY","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"angle":{"name":"angle","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.skewY'"]}]},"translate":{"name":"translate","qualifiedName":"dart-dom-svg.Matrix.translate","comment":"","commentFrom":"dart-dom-svg.Matrix.translate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-svg.Matrix","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix.translate'"]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-svg.Matrix.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-svg.Matrix.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-svg.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-svg.Matrix.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-svg.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-svg.Matrix.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-svg.Matrix.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-svg.Matrix.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-svg.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-svg.Matrix.noSuchMethod","comment":"<p><a>dart-dom-svg.Matrix.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-svg.Matrix.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-svg.Matrix.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-svg.Matrix.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-svg.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"dart-dom-svg.Matrix.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-svg.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'SVGMatrix'"]},{"name":"metadata.Unstable","parameters":[]}],"generics":{}}