{"name":"WebSocket","qualifiedName":"dart-dom-html.WebSocket","comment":"<p>Use the WebSocket interface to connect to a WebSocket,\nand to send and receive data on that WebSocket.</p>\n<p>To use a WebSocket in your web app, first create a WebSocket object,\npassing the WebSocket URL as an argument to the constructor.</p>\n<pre><code>var webSocket = new WebSocket('ws://127.0.0.1:1337/ws');\n</code></pre>\n<p>To send data on the WebSocket, use the <a>dart-dom-html.WebSocket.send</a> method.</p>\n<pre><code>if (webSocket != null &amp;&amp; webSocket.readyState == WebSocket.OPEN) {\n  webSocket.send(data);\n} else {\n  print('WebSocket not connected, message $data not sent');\n}\n</code></pre>\n<p>To receive data on the WebSocket, register a listener for message events.</p>\n<pre><code>webSocket.onMessage.listen((MessageEvent e) {\n  receivedData(e.data);\n});\n</code></pre>\n<p>The message event handler receives a <a>dart-dom-html.MessageEvent</a> object\nas its sole argument.\nYou can also define open, close, and error handlers,\nas specified by WebSocketEvents.</p>\n<p>For more information, see the\n<a href=\"http://www.dartlang.org/docs/library-tour/#html-websockets\">WebSockets</a>\nsection of the library tour and\n<a href=\"http://www.html5rocks.com/en/tutorials/websockets/basics/\">Introducing WebSockets</a>,\nan HTML5Rocks.com tutorial.</p>","isAbstract":false,"superclass":"dart-dom-html.EventTarget","implements":[],"subclass":[],"variables":{"CLOSED":{"name":"CLOSED","qualifiedName":"dart-dom-html.WebSocket.CLOSED","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.CLOSED'"]}]},"CLOSING":{"name":"CLOSING","qualifiedName":"dart-dom-html.WebSocket.CLOSING","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.CLOSING'"]}]},"CONNECTING":{"name":"CONNECTING","qualifiedName":"dart-dom-html.WebSocket.CONNECTING","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.CONNECTING'"]}]},"OPEN":{"name":"OPEN","qualifiedName":"dart-dom-html.WebSocket.OPEN","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.OPEN'"]}]},"binaryType":{"name":"binaryType","qualifiedName":"dart-dom-html.WebSocket.binaryType","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.binaryType'"]}]},"bufferedAmount":{"name":"bufferedAmount","qualifiedName":"dart-dom-html.WebSocket.bufferedAmount","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.bufferedAmount'"]}]},"closeEvent":{"name":"closeEvent","qualifiedName":"dart-dom-html.WebSocket.closeEvent","comment":"<p>Static factory designed to expose <code>close</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.WebSocket</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.CloseEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.closeEvent'"]}]},"errorEvent":{"name":"errorEvent","qualifiedName":"dart-dom-html.WebSocket.errorEvent","comment":"<p>Static factory designed to expose <code>error</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.WebSocket</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.errorEvent'"]}]},"extensions":{"name":"extensions","qualifiedName":"dart-dom-html.WebSocket.extensions","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.extensions'"]}]},"messageEvent":{"name":"messageEvent","qualifiedName":"dart-dom-html.WebSocket.messageEvent","comment":"<p>Static factory designed to expose <code>message</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.WebSocket</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.MessageEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.messageEvent'"]}]},"openEvent":{"name":"openEvent","qualifiedName":"dart-dom-html.WebSocket.openEvent","comment":"<p>Static factory designed to expose <code>open</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.WebSocket</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.openEvent'"]}]},"protocol":{"name":"protocol","qualifiedName":"dart-dom-html.WebSocket.protocol","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.protocol'"]}]},"readyState":{"name":"readyState","qualifiedName":"dart-dom-html.WebSocket.readyState","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.readyState'"]}]},"url":{"name":"url","qualifiedName":"dart-dom-html.WebSocket.url","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.url'"]}]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"onClose":{"name":"onClose","qualifiedName":"dart-dom-html.WebSocket.onClose","comment":"<p>Stream of <code>close</code> events handled by this <a>dart-dom-html.WebSocket</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.CloseEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.onclose'"]}]},"onError":{"name":"onError","qualifiedName":"dart-dom-html.WebSocket.onError","comment":"<p>Stream of <code>error</code> events handled by this <a>dart-dom-html.WebSocket</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.onerror'"]}]},"onMessage":{"name":"onMessage","qualifiedName":"dart-dom-html.WebSocket.onMessage","comment":"<p>Stream of <code>message</code> events handled by this <a>dart-dom-html.WebSocket</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.MessageEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.onmessage'"]}]},"onOpen":{"name":"onOpen","qualifiedName":"dart-dom-html.WebSocket.onOpen","comment":"<p>Stream of <code>open</code> events handled by this <a>dart-dom-html.WebSocket</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.onopen'"]}]},"supported":{"name":"supported","qualifiedName":"dart-dom-html.WebSocket.supported","comment":"<p>Checks if this type is supported on the current platform.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"dart-dom-html.WebSocket.WebSocket-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.WebSocket","inner":[]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"protocol_OR_protocols":{"name":"protocol_OR_protocols","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.WebSocket'"]}]}},"operators":{},"methods":{"close":{"name":"close","qualifiedName":"dart-dom-html.WebSocket.close","comment":"","commentFrom":"dart-dom-html.WebSocket.close","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"code":{"name":"code","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"reason":{"name":"reason","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.close'"]}]},"send":{"name":"send","qualifiedName":"dart-dom-html.WebSocket.send","comment":"<p>Transmit data to the server over this connection.</p>\n<p>This method accepts data of type <a>dart-dom-html.Blob</a>, <a>dart-typed_data.ByteBuffer</a>, <a>dart-core.String</a>, or\n<a>dart-typed_data.TypedData</a>. Named variants <a>dart-dom-html.WebSocket.sendBlob</a>, <a>dart-dom-html.WebSocket.sendByteBuffer</a>, <a>dart-dom-html.WebSocket.sendString</a>,\nor <a>dart-dom-html.WebSocket.sendTypedData</a>, in constrast, only accept data of the specified type.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.send'"]}]},"sendBlob":{"name":"sendBlob","qualifiedName":"dart-dom-html.WebSocket.sendBlob","comment":"<p>Transmit data to the server over this connection.</p>\n<p>This method accepts data of type <a>dart-dom-html.Blob</a>, <a>dart-typed_data.ByteBuffer</a>, <a>dart-core.String</a>, or\n<a>dart-typed_data.TypedData</a>. Named variants <a>dart-dom-html.WebSocket.sendBlob</a>, <a>dart-dom-html.WebSocket.sendByteBuffer</a>, <a>dart-dom-html.WebSocket.sendString</a>,\nor <a>dart-dom-html.WebSocket.sendTypedData</a>, in constrast, only accept data of the specified type.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Blob","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.send'"]}]},"sendByteBuffer":{"name":"sendByteBuffer","qualifiedName":"dart-dom-html.WebSocket.sendByteBuffer","comment":"<p>Transmit data to the server over this connection.</p>\n<p>This method accepts data of type <a>dart-dom-html.Blob</a>, <a>dart-typed_data.ByteBuffer</a>, <a>dart-core.String</a>, or\n<a>dart-typed_data.TypedData</a>. Named variants <a>dart-dom-html.WebSocket.sendBlob</a>, <a>dart-dom-html.WebSocket.sendByteBuffer</a>, <a>dart-dom-html.WebSocket.sendString</a>,\nor <a>dart-dom-html.WebSocket.sendTypedData</a>, in constrast, only accept data of the specified type.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.ByteBuffer","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.send'"]}]},"sendString":{"name":"sendString","qualifiedName":"dart-dom-html.WebSocket.sendString","comment":"<p>Transmit data to the server over this connection.</p>\n<p>This method accepts data of type <a>dart-dom-html.Blob</a>, <a>dart-typed_data.ByteBuffer</a>, <a>dart-core.String</a>, or\n<a>dart-typed_data.TypedData</a>. Named variants <a>dart-dom-html.WebSocket.sendBlob</a>, <a>dart-dom-html.WebSocket.sendByteBuffer</a>, <a>dart-dom-html.WebSocket.sendString</a>,\nor <a>dart-dom-html.WebSocket.sendTypedData</a>, in constrast, only accept data of the specified type.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.send'"]}]},"sendTypedData":{"name":"sendTypedData","qualifiedName":"dart-dom-html.WebSocket.sendTypedData","comment":"<p>Transmit data to the server over this connection.</p>\n<p>This method accepts data of type <a>dart-dom-html.Blob</a>, <a>dart-typed_data.ByteBuffer</a>, <a>dart-core.String</a>, or\n<a>dart-typed_data.TypedData</a>. Named variants <a>dart-dom-html.WebSocket.sendBlob</a>, <a>dart-dom-html.WebSocket.sendByteBuffer</a>, <a>dart-dom-html.WebSocket.sendString</a>,\nor <a>dart-dom-html.WebSocket.sendTypedData</a>, in constrast, only accept data of the specified type.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.TypedData","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket.send'"]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-html.WebSocket.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-html.WebSocket.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"on":{"name":"on","qualifiedName":"dart-dom-html.WebSocket.on","comment":"<p>This is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.</p>","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.on","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Events","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-html.WebSocket.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-html.WebSocket.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-html.WebSocket.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-html.WebSocket.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"addEventListener":{"name":"addEventListener","qualifiedName":"dart-dom-html.WebSocket.addEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.addEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.addEventListener'"]}]},"dispatchEvent":{"name":"dispatchEvent","qualifiedName":"dart-dom-html.WebSocket.dispatchEvent","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.dispatchEvent","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.dispatchEvent'"]}]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-html.WebSocket.noSuchMethod","comment":"<p><a>dart-dom-html.WebSocket.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-html.WebSocket.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-html.WebSocket.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-html.WebSocket.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeEventListener":{"name":"removeEventListener","qualifiedName":"dart-dom-html.WebSocket.removeEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.removeEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.removeEventListener'"]}]},"toString":{"name":"toString","qualifiedName":"dart-dom-html.WebSocket.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'WebSocket'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.FIREFOX"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.IE","'10'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Unstable","parameters":[]}],"generics":{}}