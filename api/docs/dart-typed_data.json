{"name":"dart-typed_data","qualifiedName":"dart-typed_data","comment":"<p>Specialized integers and floating point numbers,\nwith SIMD support and efficient lists.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"ByteBuffer","qualifiedName":"dart-typed_data.ByteBuffer","preview":"<p>A sequence of bytes underlying a typed data object.\nUsed to process large quantities of binary or numerical data\nmore efficiently using a typed view.</p>"},{"name":"ByteData","qualifiedName":"dart-typed_data.ByteData","preview":"<p>A fixed-length, random-access sequence of bytes that also provides random\nand unaligned access to the fixed-width integers and floating point\nnumbers represented by those bytes.\nByteData may be used to pack and unpack data from external sources\n(such as networks or files systems), and to process large quantities\nof numerical data more efficiently than would be possible\nwith ordinary <a>dart-core.List</a> implementations. ByteData can save space, by\neliminating the need for object headers, and time, by eliminating the\nneed for data copies. Finally, ByteData may be used to intentionally\nreinterpret the bytes representing one arithmetic type as another.\nFor example this code fragment determine what 32-bit signed integer\nis represented by the bytes of a 32-bit floating point number:</p>"},{"name":"Endianness","qualifiedName":"dart-typed_data.Endianness","preview":"<p>Describes endianness to be used when accessing a sequence of bytes.</p>"},{"name":"Float32List","qualifiedName":"dart-typed_data.Float32List","preview":"<p>A fixed-length list of IEEE 754 single-precision binary floating-point\nnumbers  that is viewable as a <a>dart-typed_data.TypedData</a>. For long lists, this\nimplementation can be considerably more space- and time-efficient than\nthe default <a>dart-core.List</a> implementation.</p>"},{"name":"Float32x4","qualifiedName":"dart-typed_data.Float32x4","preview":"<p>Interface of Dart Float32x4 immutable value type and operations.\nFloat32x4 stores 4 32-bit floating point values in \"lanes\".\nThe lanes are \"x\", \"y\", \"z\", and \"w\" respectively.</p>"},{"name":"Float32x4List","qualifiedName":"dart-typed_data.Float32x4List","preview":"<p>A fixed-length list of Float32x4 numbers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation will be considerably more\nspace- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Float64List","qualifiedName":"dart-typed_data.Float64List","preview":"<p>A fixed-length list of IEEE 754 double-precision binary floating-point\nnumbers  that is viewable as a <a>dart-typed_data.TypedData</a>. For long lists, this\nimplementation can be considerably more space- and time-efficient than\nthe default <a>dart-core.List</a> implementation.</p>"},{"name":"Float64x2","qualifiedName":"dart-typed_data.Float64x2"},{"name":"Float64x2List","qualifiedName":"dart-typed_data.Float64x2List","preview":"<p>A fixed-length list of Float64x2 numbers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation will be considerably more\nspace- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Int16List","qualifiedName":"dart-typed_data.Int16List","preview":"<p>A fixed-length list of 16-bit signed integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Int32List","qualifiedName":"dart-typed_data.Int32List","preview":"<p>A fixed-length list of 32-bit signed integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Int32x4","qualifiedName":"dart-typed_data.Int32x4","preview":"<p>Interface of Dart Int32x4 and operations.\nInt32x4 stores 4 32-bit bit-masks in \"lanes\".\nThe lanes are \"x\", \"y\", \"z\", and \"w\" respectively.</p>"},{"name":"Int32x4List","qualifiedName":"dart-typed_data.Int32x4List","preview":"<p>A fixed-length list of Int32x4 numbers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation will be considerably more\nspace- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Int64List","qualifiedName":"dart-typed_data.Int64List","preview":"<p>A fixed-length list of 64-bit signed integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Int8List","qualifiedName":"dart-typed_data.Int8List","preview":"<p>A fixed-length list of 8-bit signed integers.\nFor long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"TypedData","qualifiedName":"dart-typed_data.TypedData","preview":"<p>A typed view of a sequence of bytes.</p>"},{"name":"Uint16List","qualifiedName":"dart-typed_data.Uint16List","preview":"<p>A fixed-length list of 16-bit unsigned integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Uint32List","qualifiedName":"dart-typed_data.Uint32List","preview":"<p>A fixed-length list of 32-bit unsigned integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Uint64List","qualifiedName":"dart-typed_data.Uint64List","preview":"<p>A fixed-length list of 64-bit unsigned integers that is viewable as a\n<a>dart-typed_data.TypedData</a>. For long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"},{"name":"Uint8ClampedList","qualifiedName":"dart-typed_data.Uint8ClampedList","preview":"<p>A fixed-length list of 8-bit unsigned integers.\nFor long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.\nIndexed store clamps the value to range 0..0xFF.</p>"},{"name":"Uint8List","qualifiedName":"dart-typed_data.Uint8List","preview":"<p>A fixed-length list of 8-bit unsigned integers.\nFor long lists, this implementation can be considerably\nmore space- and time-efficient than the default <a>dart-core.List</a> implementation.</p>"}],"typedef":{},"error":[]},"packageName":"","packageIntro":null}