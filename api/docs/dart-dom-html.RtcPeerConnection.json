{"name":"RtcPeerConnection","qualifiedName":"dart-dom-html.RtcPeerConnection","comment":"","isAbstract":false,"superclass":"dart-dom-html.EventTarget","implements":[],"subclass":[],"variables":{"addStreamEvent":{"name":"addStreamEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.addStreamEvent","comment":"<p>Static factory designed to expose <code>addstream</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.MediaStreamEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.addstreamEvent'"]}]},"dataChannelEvent":{"name":"dataChannelEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.dataChannelEvent","comment":"<p>Static factory designed to expose <code>datachannel</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.RtcDataChannelEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.datachannelEvent'"]}]},"iceCandidateEvent":{"name":"iceCandidateEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.iceCandidateEvent","comment":"<p>Static factory designed to expose <code>icecandidate</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.RtcIceCandidateEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.icecandidateEvent'"]}]},"iceConnectionState":{"name":"iceConnectionState","qualifiedName":"dart-dom-html.RtcPeerConnection.iceConnectionState","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.iceConnectionState'"]}]},"iceConnectionStateChangeEvent":{"name":"iceConnectionStateChangeEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.iceConnectionStateChangeEvent","comment":"<p>Static factory designed to expose <code>iceconnectionstatechange</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.iceconnectionstatechangeEvent'"]}]},"iceGatheringState":{"name":"iceGatheringState","qualifiedName":"dart-dom-html.RtcPeerConnection.iceGatheringState","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.iceGatheringState'"]}]},"localDescription":{"name":"localDescription","qualifiedName":"dart-dom-html.RtcPeerConnection.localDescription","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.localDescription'"]}]},"negotiationNeededEvent":{"name":"negotiationNeededEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.negotiationNeededEvent","comment":"<p>Static factory designed to expose <code>negotiationneeded</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.negotiationneededEvent'"]}]},"remoteDescription":{"name":"remoteDescription","qualifiedName":"dart-dom-html.RtcPeerConnection.remoteDescription","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.remoteDescription'"]}]},"removeStreamEvent":{"name":"removeStreamEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.removeStreamEvent","comment":"<p>Static factory designed to expose <code>removestream</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.MediaStreamEvent","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.removestreamEvent'"]}]},"signalingState":{"name":"signalingState","qualifiedName":"dart-dom-html.RtcPeerConnection.signalingState","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.signalingState'"]}]},"signalingStateChangeEvent":{"name":"signalingStateChangeEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.signalingStateChangeEvent","comment":"<p>Static factory designed to expose <code>signalingstatechange</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-html.RtcPeerConnection</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.signalingstatechangeEvent'"]}]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"onAddStream":{"name":"onAddStream","qualifiedName":"dart-dom-html.RtcPeerConnection.onAddStream","comment":"<p>Stream of <code>addstream</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.MediaStreamEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.onaddstream'"]}]},"onDataChannel":{"name":"onDataChannel","qualifiedName":"dart-dom-html.RtcPeerConnection.onDataChannel","comment":"<p>Stream of <code>datachannel</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.RtcDataChannelEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.ondatachannel'"]}]},"onIceCandidate":{"name":"onIceCandidate","qualifiedName":"dart-dom-html.RtcPeerConnection.onIceCandidate","comment":"<p>Stream of <code>icecandidate</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.RtcIceCandidateEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.onicecandidate'"]}]},"onIceConnectionStateChange":{"name":"onIceConnectionStateChange","qualifiedName":"dart-dom-html.RtcPeerConnection.onIceConnectionStateChange","comment":"<p>Stream of <code>iceconnectionstatechange</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.oniceconnectionstatechange'"]}]},"onNegotiationNeeded":{"name":"onNegotiationNeeded","qualifiedName":"dart-dom-html.RtcPeerConnection.onNegotiationNeeded","comment":"<p>Stream of <code>negotiationneeded</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.onnegotiationneeded'"]}]},"onRemoveStream":{"name":"onRemoveStream","qualifiedName":"dart-dom-html.RtcPeerConnection.onRemoveStream","comment":"<p>Stream of <code>removestream</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.MediaStreamEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.onremovestream'"]}]},"onSignalingStateChange":{"name":"onSignalingStateChange","qualifiedName":"dart-dom-html.RtcPeerConnection.onSignalingStateChange","comment":"<p>Stream of <code>signalingstatechange</code> events handled by this <a>dart-dom-html.RtcPeerConnection</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.onsignalingstatechange'"]}]},"supported":{"name":"supported","qualifiedName":"dart-dom-html.RtcPeerConnection.supported","comment":"<p>Checks if Real Time Communication (RTC) APIs are supported and enabled on\nthe current platform.</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"dart-dom-html.RtcPeerConnection.RtcPeerConnection-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.RtcPeerConnection","inner":[]}],"parameters":{"rtcIceServers":{"name":"rtcIceServers","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]},"mediaConstraints":{"name":"mediaConstraints","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"addIceCandidate":{"name":"addIceCandidate","qualifiedName":"dart-dom-html.RtcPeerConnection.addIceCandidate","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.addIceCandidate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"candidate":{"name":"candidate","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.RtcIceCandidate","inner":[]}],"value":null,"annotations":[]},"successCallback":{"name":"successCallback","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.VoidCallback","inner":[]}],"value":null,"annotations":[]},"failureCallback":{"name":"failureCallback","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html._RtcErrorCallback","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.addIceCandidate'"]}]},"addStream":{"name":"addStream","qualifiedName":"dart-dom-html.RtcPeerConnection.addStream","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.addStream","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"stream":{"name":"stream","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaStream","inner":[]}],"value":null,"annotations":[]},"mediaConstraints":{"name":"mediaConstraints","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.addStream'"]}]},"close":{"name":"close","qualifiedName":"dart-dom-html.RtcPeerConnection.close","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.close","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.close'"]}]},"createAnswer":{"name":"createAnswer","qualifiedName":"dart-dom-html.RtcPeerConnection.createAnswer","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.createAnswer","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}]}],"parameters":{"mediaConstraints":{"name":"mediaConstraints","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"createDataChannel":{"name":"createDataChannel","qualifiedName":"dart-dom-html.RtcPeerConnection.createDataChannel","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.createDataChannel","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.RtcDataChannel","inner":[]}],"parameters":{"label":{"name":"label","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"options":{"name":"options","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.createDataChannel'"]}]},"createDtmfSender":{"name":"createDtmfSender","qualifiedName":"dart-dom-html.RtcPeerConnection.createDtmfSender","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.createDtmfSender","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.RtcDtmfSender","inner":[]}],"parameters":{"track":{"name":"track","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaStreamTrack","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.createDTMFSender'"]}]},"createOffer":{"name":"createOffer","qualifiedName":"dart-dom-html.RtcPeerConnection.createOffer","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.createOffer","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}]}],"parameters":{"mediaConstraints":{"name":"mediaConstraints","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"getLocalStreams":{"name":"getLocalStreams","qualifiedName":"dart-dom-html.RtcPeerConnection.getLocalStreams","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.getLocalStreams","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-dom-html.MediaStream","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.getLocalStreams'"]}]},"getRemoteStreams":{"name":"getRemoteStreams","qualifiedName":"dart-dom-html.RtcPeerConnection.getRemoteStreams","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.getRemoteStreams","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-dom-html.MediaStream","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.getRemoteStreams'"]}]},"getStats":{"name":"getStats","qualifiedName":"dart-dom-html.RtcPeerConnection.getStats","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.getStats","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.RtcStatsResponse","inner":[]}]}],"parameters":{"selector":{"name":"selector","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaStreamTrack","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.getStats'"]}]},"getStreamById":{"name":"getStreamById","qualifiedName":"dart-dom-html.RtcPeerConnection.getStreamById","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.getStreamById","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.MediaStream","inner":[]}],"parameters":{"streamId":{"name":"streamId","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.getStreamById'"]}]},"removeStream":{"name":"removeStream","qualifiedName":"dart-dom-html.RtcPeerConnection.removeStream","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.removeStream","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"stream":{"name":"stream","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.MediaStream","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.removeStream'"]}]},"setLocalDescription":{"name":"setLocalDescription","qualifiedName":"dart-dom-html.RtcPeerConnection.setLocalDescription","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.setLocalDescription","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"description":{"name":"description","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.setLocalDescription'"]}]},"setRemoteDescription":{"name":"setRemoteDescription","qualifiedName":"dart-dom-html.RtcPeerConnection.setRemoteDescription","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.setRemoteDescription","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"description":{"name":"description","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.RtcSessionDescription","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.setRemoteDescription'"]}]},"updateIce":{"name":"updateIce","qualifiedName":"dart-dom-html.RtcPeerConnection.updateIce","comment":"","commentFrom":"dart-dom-html.RtcPeerConnection.updateIce","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"configuration":{"name":"configuration","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]},"mediaConstraints":{"name":"mediaConstraints","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection.updateIce'"]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-html.RtcPeerConnection.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-html.RtcPeerConnection.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"on":{"name":"on","qualifiedName":"dart-dom-html.RtcPeerConnection.on","comment":"<p>This is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.</p>","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.on","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Events","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-html.RtcPeerConnection.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-html.RtcPeerConnection.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-html.RtcPeerConnection.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-html.RtcPeerConnection.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"addEventListener":{"name":"addEventListener","qualifiedName":"dart-dom-html.RtcPeerConnection.addEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.addEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.addEventListener'"]}]},"dispatchEvent":{"name":"dispatchEvent","qualifiedName":"dart-dom-html.RtcPeerConnection.dispatchEvent","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.dispatchEvent","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.dispatchEvent'"]}]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-html.RtcPeerConnection.noSuchMethod","comment":"<p><a>dart-dom-html.RtcPeerConnection.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-html.RtcPeerConnection.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-html.RtcPeerConnection.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-html.RtcPeerConnection.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeEventListener":{"name":"removeEventListener","qualifiedName":"dart-dom-html.RtcPeerConnection.removeEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.removeEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.removeEventListener'"]}]},"toString":{"name":"toString","qualifiedName":"dart-dom-html.RtcPeerConnection.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'RTCPeerConnection'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.Experimental","parameters":[]}],"generics":{}}