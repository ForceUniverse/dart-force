{"name":"dart-js","qualifiedName":"dart-js","comment":"<p>Support for interoperating with JavaScript.</p>\n<p>This library provides access to JavaScript objects from Dart, allowing\nDart code to get and set properties, and call methods of JavaScript objects\nand invoke JavaScript functions. The library takes care of converting\nbetween Dart and JavaScript objects where possible, or providing proxies if\nconversion isn't possible.</p>\n<p>This library does not yet make Dart objects usable from JavaScript, their\nmethods and proeprties are not accessible, though it does allow Dart\nfunctions to be passed into and called from JavaScript.</p>\n<p><a>dart-js.JsObject</a> is the core type and represents a proxy of a JavaScript object.\nJsObject gives access to the underlying JavaScript objects properties and\nmethods. <code>JsObject</code>s can be acquired by calls to JavaScript, or they can be\ncreated from proxies to JavaScript constructors.</p>\n<p>The top-level getter <a>dart-js.context</a> provides a <a>dart-js.JsObject</a> that represents the\nglobal object in JavaScript, usually <code>window</code>.</p>\n<p>The following example shows an alert dialog via a JavaScript call to the\nglobal function <code>alert()</code>:</p>\n<pre><code>import 'dart:js';\n\nmain() =&gt; context.callMethod('alert', ['Hello from Dart!']);\n</code></pre>\n<p>This example shows how to create a <a>dart-js.JsObject</a> from a JavaScript constructor\nand access its properties:</p>\n<pre><code>import 'dart:js';\n\nmain() {\n  var object = new JsObject(context['Object']);\n  object['greeting'] = 'Hello';\n  object['greet'] = (name) =&gt; \"${object['greeting']} $name\";\n  var message = object.callMethod('greet', ['JavaScript']);\n  context['console'].callMethod('log', [message]);\n}\n</code></pre>\n<h2>Proxying and automatic conversion</h2>\n<p>When setting properties on a JsObject or passing arguments to a Javascript\nmethod or function, Dart objects are automatically converted or proxied to\nJavaScript objects. When accessing JavaScript properties, or when a Dart\nclosure is invoked from JavaScript, the JavaScript objects are also\nconverted to Dart.</p>\n<p>Functions and closures are proxied in such a way that they are callable. A\nDart closure assigned to a JavaScript property is proxied by a function in\nJavaScript. A JavaScript function accessed from Dart is proxied by a\n<a>dart-js.JsFunction</a>, which has a apply method to invoke it.</p>\n<p>The following types are transferred directly and not proxied:</p><ul><li>\"Basic\" types: <code>null</code>, <code>bool</code>, <code>num</code>, <code>String</code>, <code>DateTime</code></li><li><code>Blob</code></li><li><code>Event</code></li><li><code>HtmlCollection</code></li><li><code>ImageData</code></li><li><code>KeyRange</code></li><li><code>Node</code></li><li><code>NodeList</code></li><li>\n<p><code>TypedData</code>, including its subclasses like <code>Int32List</code>, but <em>not</em>\n  <code>ByteBuffer</code></p></li><li><code>Window</code></li></ul>\n<h2>Converting collections with JsObject.jsify()</h2>\n<p>To create a JavaScript collection from a Dart collection use the\n<a>dart-js.JsObject.JsObject-jsify</a> constructor, which converts Dart <a>dart-core.Map</a>s and <a>dart-core.Iterable</a>s\ninto JavaScript Objects and Arrays.</p>\n<p>The following expression creats a new JavaScript object with the properties\n<code>a</code> and <code>b</code> defined:</p>\n<pre><code>var jsMap = new JsObject.jsify({'a': 1, 'b': 2});\n</code></pre>\n<p>This expression creates a JavaScript array:</p>\n<pre><code>var jsArray = new JsObject.jsify([1, 2, 3]);\n</code></pre>","variables":{"context":{"name":"context","qualifiedName":"dart-js.context","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-js.JsObject","inner":[]}],"annotations":[]}},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"JsArray","qualifiedName":"dart-js.JsArray","preview":"<p>A <a>dart-core.List</a> that proxies a JavaScript array.</p>"},{"name":"JsFunction","qualifiedName":"dart-js.JsFunction","preview":"<p>Proxies a JavaScript Function object.</p>"},{"name":"JsObject","qualifiedName":"dart-js.JsObject","preview":"<p>Proxies a JavaScript object to Dart.</p>"}],"typedef":{},"error":[]},"packageName":"","packageIntro":null}