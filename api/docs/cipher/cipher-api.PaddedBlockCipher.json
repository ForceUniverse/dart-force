{"name":"PaddedBlockCipher","qualifiedName":"cipher/cipher-api.PaddedBlockCipher","comment":"<p>All padded block ciphers conform to this interface.</p>\n<p>A padded block cipher is a wrapper around a <a>cipher/cipher-api.BlockCipher</a> that allows padding the last procesed block if it is smaller\nthan the blockSize.</p>","isAbstract":true,"superclass":"dart-core.Object","implements":["cipher/cipher-api.BlockCipher"],"subclass":[],"variables":{"registry":{"name":"registry","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.registry","comment":"<p>The <a>cipher/cipher-api-registry.Registry</a> for <a>cipher/cipher.PaddedBlockCipher</a> algorithms</p>","final":true,"static":true,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"cipher":{"name":"cipher","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.cipher","comment":"<p>Get the underlying <a>cipher/cipher-api.BlockCipher</a> used by this cipher.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher-api.BlockCipher","inner":[]}],"parameters":{},"annotations":[]},"padding":{"name":"padding","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.padding","comment":"<p>Get the underlying <a>cipher/cipher-api.Padding</a> used by this cipher.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher-api.Padding","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.PaddedBlockCipher-","comment":"<p>Create the padded block cipher specified by the standard <a>cipher/cipher-api.PaddedBlockCipher.PaddedBlockCipher-.algorithmName</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"cipher/cipher-api.PaddedBlockCipher","inner":[]}],"parameters":{"algorithmName":{"name":"algorithmName","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"doFinal":{"name":"doFinal","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.doFinal","comment":"<p>Process the last block of data given by <a>cipher/cipher-api.PaddedBlockCipher.doFinal.inp</a> and starting at offset\n<a>cipher/cipher-api.PaddedBlockCipher.doFinal.inpOff</a> and pad it if necessary (i.e: if it is smaller than blockSize).</p>\n<p>The resulting cipher text is put in <a>cipher/cipher-api.PaddedBlockCipher.doFinal.out</a> beginning at position <a>cipher/cipher-api.PaddedBlockCipher.doFinal.outOff</a>.</p>\n<p>This method returns the total bytes processed without taking the padding into account.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"inp":{"name":"inp","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]},"inpOff":{"name":"inpOff","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]},"outOff":{"name":"outOff","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"process":{"name":"process","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.process","comment":"<p>Process a whole block of <a>cipher/cipher-api.PaddedBlockCipher.process.data</a> at once, returning the result in a new byte array.</p>\n<p>This call does as many calls to processBlock as needed to process all the given data and a\nfinal one to <a>cipher/cipher-api.PaddedBlockCipher.doFinal</a> so that the padding can do its job.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"algorithmName":{"name":"algorithmName","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.algorithmName","comment":"<p>Get this cipher's standard algorithm name.</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.algorithmName","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"blockSize":{"name":"blockSize","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.blockSize","comment":"<p>Get this ciphers's block size.</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.blockSize","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"hashCode":{"name":"hashCode","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>cipher/cipher-api.PaddedBlockCipher.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>cipher/cipher-api.PaddedBlockCipher.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>cipher/cipher-api.PaddedBlockCipher.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"init":{"name":"init","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.init","comment":"<p>Init the cipher with its initialization <a>cipher/cipher-api.PaddedBlockCipher.init.params</a>. The type of\n<a>cipher/cipher-api.CipherParameters</a> depends on the algorithm being used (see the\ndocumentation of each implementation to find out more).</p>\n<p>Use the argument <a>cipher/cipher-api.PaddedBlockCipher.init.forEncryption</a> to tell the cipher if you want to encrypt\nor decrypt data.</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.init","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"forEncryption":{"name":"forEncryption","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":false,"named":false,"default":false,"type":[{"outer":"cipher/cipher-api.CipherParameters","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.noSuchMethod","comment":"<p><a>cipher/cipher-api.PaddedBlockCipher.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>cipher/cipher-api.PaddedBlockCipher.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>cipher/cipher-api.PaddedBlockCipher.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>cipher/cipher-api.PaddedBlockCipher.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"process":{"name":"process","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.process","comment":"<p>Process a whole block of <a>cipher/cipher-api.PaddedBlockCipher.blockSize</a> bytes stored in <a>cipher/cipher-api.PaddedBlockCipher.process.data</a> at once, returning the result in a\nnew byte array.</p>\n<p>This call is equivalent to <a>cipher/cipher-api.PaddedBlockCipher.processBlock</a> but it allocates the array under the hood.</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.process","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"parameters":{"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"processBlock":{"name":"processBlock","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.processBlock","comment":"<p>Process a whole block of data given by <a>cipher/cipher-api.PaddedBlockCipher.processBlock.inp</a> and starting at offset\n<a>cipher/cipher-api.PaddedBlockCipher.processBlock.inpOff</a>.</p>\n<p>The resulting cipher text is put in <a>cipher/cipher-api.PaddedBlockCipher.processBlock.out</a> beginning at position <a>cipher/cipher-api.PaddedBlockCipher.processBlock.outOff</a>.</p>\n<p>This method returns the total bytes processed (which is the same as the\nblock size of the algorithm).</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.processBlock","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{"inp":{"name":"inp","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]},"inpOff":{"name":"inpOff","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]},"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"dart-typed_data.Uint8List","inner":[]}],"value":null,"annotations":[]},"outOff":{"name":"outOff","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"reset":{"name":"reset","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.reset","comment":"<p>Reset the cipher to its original state.</p>","commentFrom":"","inheritedFrom":"cipher-api.BlockCipher.reset","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"toString":{"name":"toString","qualifiedName":"cipher/cipher-api.PaddedBlockCipher.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}