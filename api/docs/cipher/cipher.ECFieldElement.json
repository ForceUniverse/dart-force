{"name":"ECFieldElement","qualifiedName":"cipher/cipher.ECFieldElement","comment":"<p>Type for coordinates of an <a>cipher/cipher.ECPoint</a></p>","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"byteLength":{"name":"byteLength","qualifiedName":"cipher/cipher.ECFieldElement.byteLength","comment":"","commentFrom":"cipher.ECFieldElement.byteLength","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"fieldName":{"name":"fieldName","qualifiedName":"cipher/cipher.ECFieldElement.fieldName","comment":"","commentFrom":"cipher.ECFieldElement.fieldName","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"fieldSize":{"name":"fieldSize","qualifiedName":"cipher/cipher.ECFieldElement.fieldSize","comment":"","commentFrom":"cipher.ECFieldElement.fieldSize","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"*":{"name":"*","qualifiedName":"cipher/cipher.ECFieldElement.*","comment":"","commentFrom":"cipher.ECFieldElement.*","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"+":{"name":"+","qualifiedName":"cipher/cipher.ECFieldElement.+","comment":"","commentFrom":"cipher.ECFieldElement.+","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"-":{"name":"-","qualifiedName":"cipher/cipher.ECFieldElement.-","comment":"","commentFrom":"cipher.ECFieldElement.-","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"/":{"name":"/","qualifiedName":"cipher/cipher.ECFieldElement./","comment":"","commentFrom":"cipher.ECFieldElement./","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{"b":{"name":"b","optional":false,"named":false,"default":false,"type":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"unary-":{"name":"unary-","qualifiedName":"cipher/cipher.ECFieldElement.unary-","comment":"","commentFrom":"cipher.ECFieldElement.unary-","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{},"annotations":[]}},"methods":{"invert":{"name":"invert","qualifiedName":"cipher/cipher.ECFieldElement.invert","comment":"","commentFrom":"cipher.ECFieldElement.invert","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{},"annotations":[]},"sqrt":{"name":"sqrt","qualifiedName":"cipher/cipher.ECFieldElement.sqrt","comment":"","commentFrom":"cipher.ECFieldElement.sqrt","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{},"annotations":[]},"square":{"name":"square","qualifiedName":"cipher/cipher.ECFieldElement.square","comment":"","commentFrom":"cipher.ECFieldElement.square","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"cipher/cipher.ECFieldElement","inner":[]}],"parameters":{},"annotations":[]},"toBigInteger":{"name":"toBigInteger","qualifiedName":"cipher/cipher.ECFieldElement.toBigInteger","comment":"","commentFrom":"cipher.ECFieldElement.toBigInteger","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"bignum.BigInteger","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"cipher/cipher.ECFieldElement.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>cipher/cipher.ECFieldElement.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"cipher/cipher.ECFieldElement.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"cipher/cipher.ECFieldElement.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>cipher/cipher.ECFieldElement.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>cipher/cipher.ECFieldElement.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"cipher/cipher.ECFieldElement.noSuchMethod","comment":"<p><a>cipher/cipher.ECFieldElement.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>cipher/cipher.ECFieldElement.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>cipher/cipher.ECFieldElement.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>cipher/cipher.ECFieldElement.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"cipher/cipher.ECFieldElement.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}