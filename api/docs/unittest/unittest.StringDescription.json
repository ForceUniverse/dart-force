{"name":"StringDescription","qualifiedName":"unittest/unittest.StringDescription","comment":"<p>The default implementation of IDescription. This should rarely need\nsubstitution, although conceivably it is a place where other languages\ncould be supported.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":["unittest/matcher.Description"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"length":{"name":"length","qualifiedName":"unittest/unittest.StringDescription.length","comment":"","commentFrom":"matcher.Description.length","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"unittest/unittest.StringDescription.StringDescription-","comment":"<p>Initialize the description with initial contents <a>unittest/unittest.StringDescription.StringDescription-.init</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"init":{"name":"init","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\"\"","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"add":{"name":"add","qualifiedName":"unittest/unittest.StringDescription.add","comment":"<p>Append <a>unittest/unittest.StringDescription.add.text</a> to the description.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"text":{"name":"text","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"unittest/unittest.StringDescription.addAll","comment":"<p>Append an [Iterable] [list] of objects to the description, using the\nspecified <a>unittest/unittest.StringDescription.addAll.separator</a> and framing the list with <a>unittest/unittest.StringDescription.addAll.start</a>\nand <a>unittest/unittest.StringDescription.addAll.end</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"separator":{"name":"separator","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"list":{"name":"list","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addDescriptionOf":{"name":"addDescriptionOf","qualifiedName":"unittest/unittest.StringDescription.addDescriptionOf","comment":"<p>Appends a description of <a>unittest/unittest.StringDescription.addDescriptionOf.value</a>. If it is an IMatcher use its\ndescribe method; if it is a string use its literal value after\nescaping any embedded control characters; otherwise use its\ntoString() value and wrap it in angular \"quotes\".</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"replace":{"name":"replace","qualifiedName":"unittest/unittest.StringDescription.replace","comment":"<p>Change the value of the description.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"text":{"name":"text","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"unittest/unittest.StringDescription.toString","comment":"<p>Get the description as a string.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"unittest/unittest.StringDescription.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>unittest/unittest.StringDescription.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"unittest/unittest.StringDescription.length","comment":"","commentFrom":"","inheritedFrom":"matcher.Description.length","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"unittest/unittest.StringDescription.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"unittest/unittest.StringDescription.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>unittest/unittest.StringDescription.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>unittest/unittest.StringDescription.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"add":{"name":"add","qualifiedName":"unittest/unittest.StringDescription.add","comment":"<p>This is used to add arbitrary text to the description.</p>","commentFrom":"","inheritedFrom":"matcher.Description.add","static":false,"abstract":true,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"text":{"name":"text","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"unittest/unittest.StringDescription.addAll","comment":"<p>This is used to add a description of an [Iterable] [list],\nwith appropriate <a>unittest/unittest.StringDescription.addAll.start</a> and <a>unittest/unittest.StringDescription.addAll.end</a> markers and inter-element <a>unittest/unittest.StringDescription.addAll.separator</a>.</p>","commentFrom":"","inheritedFrom":"matcher.Description.addAll","static":false,"abstract":true,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"start":{"name":"start","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"separator":{"name":"separator","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"end":{"name":"end","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"list":{"name":"list","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addDescriptionOf":{"name":"addDescriptionOf","qualifiedName":"unittest/unittest.StringDescription.addDescriptionOf","comment":"<p>This is used to add a meaningful description of a value.</p>","commentFrom":"","inheritedFrom":"matcher.Description.addDescriptionOf","static":false,"abstract":true,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"unittest/unittest.StringDescription.noSuchMethod","comment":"<p><a>unittest/unittest.StringDescription.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>unittest/unittest.StringDescription.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>unittest/unittest.StringDescription.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>unittest/unittest.StringDescription.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"replace":{"name":"replace","qualifiedName":"unittest/unittest.StringDescription.replace","comment":"<p>Change the value of the description.</p>","commentFrom":"","inheritedFrom":"matcher.Description.replace","static":false,"abstract":true,"constant":false,"return":[{"outer":"unittest/unittest.Description","inner":[]}],"parameters":{"text":{"name":"text","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"unittest/unittest.StringDescription.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}