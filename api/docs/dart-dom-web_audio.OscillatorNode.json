{"name":"OscillatorNode","qualifiedName":"dart-dom-web_audio.OscillatorNode","comment":"","isAbstract":false,"superclass":"dart-dom-web_audio.AudioSourceNode","implements":[],"subclass":[],"variables":{"FINISHED_STATE":{"name":"FINISHED_STATE","qualifiedName":"dart-dom-web_audio.OscillatorNode.FINISHED_STATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.FINISHED_STATE'"]}]},"PLAYING_STATE":{"name":"PLAYING_STATE","qualifiedName":"dart-dom-web_audio.OscillatorNode.PLAYING_STATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.PLAYING_STATE'"]}]},"SCHEDULED_STATE":{"name":"SCHEDULED_STATE","qualifiedName":"dart-dom-web_audio.OscillatorNode.SCHEDULED_STATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.SCHEDULED_STATE'"]}]},"UNSCHEDULED_STATE":{"name":"UNSCHEDULED_STATE","qualifiedName":"dart-dom-web_audio.OscillatorNode.UNSCHEDULED_STATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.UNSCHEDULED_STATE'"]}]},"detune":{"name":"detune","qualifiedName":"dart-dom-web_audio.OscillatorNode.detune","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-web_audio.AudioParam","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.detune'"]}]},"endedEvent":{"name":"endedEvent","qualifiedName":"dart-dom-web_audio.OscillatorNode.endedEvent","comment":"<p>Static factory designed to expose <code>ended</code> events to event\nhandlers that are not necessarily instances of <a>dart-dom-web_audio.OscillatorNode</a>.</p>\n<p>See <a>dart-dom-html.EventStreamProvider</a> for usage information.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-dom-html.EventStreamProvider","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.endedEvent'"]},{"name":"metadata.Experimental","parameters":[]}]},"frequency":{"name":"frequency","qualifiedName":"dart-dom-web_audio.OscillatorNode.frequency","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-web_audio.AudioParam","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.frequency'"]}]},"playbackState":{"name":"playbackState","qualifiedName":"dart-dom-web_audio.OscillatorNode.playbackState","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.playbackState'"]}]},"type":{"name":"type","qualifiedName":"dart-dom-web_audio.OscillatorNode.type","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.type'"]}]}},"inheritedVariables":{"channelCount":{"name":"channelCount","qualifiedName":"dart-dom-web_audio.AudioNode.channelCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.channelCount'"]}]},"channelCountMode":{"name":"channelCountMode","qualifiedName":"dart-dom-web_audio.AudioNode.channelCountMode","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.channelCountMode'"]}]},"channelInterpretation":{"name":"channelInterpretation","qualifiedName":"dart-dom-web_audio.AudioNode.channelInterpretation","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.channelInterpretation'"]}]},"context":{"name":"context","qualifiedName":"dart-dom-web_audio.AudioNode.context","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-web_audio.AudioContext","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.context'"]}]},"numberOfInputs":{"name":"numberOfInputs","qualifiedName":"dart-dom-web_audio.AudioNode.numberOfInputs","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.numberOfInputs'"]}]},"numberOfOutputs":{"name":"numberOfOutputs","qualifiedName":"dart-dom-web_audio.AudioNode.numberOfOutputs","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.numberOfOutputs'"]}]}},"methods":{"setters":{},"getters":{"onEnded":{"name":"onEnded","qualifiedName":"dart-dom-web_audio.OscillatorNode.onEnded","comment":"<p>Stream of <code>ended</code> events handled by this <a>dart-dom-web_audio.OscillatorNode</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-dom-html.Event","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.onended'"]},{"name":"metadata.Experimental","parameters":[]}]}},"constructors":{},"operators":{},"methods":{"noteOff":{"name":"noteOff","qualifiedName":"dart-dom-web_audio.OscillatorNode.noteOff","comment":"","commentFrom":"dart-dom-web_audio.OscillatorNode.noteOff","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"when":{"name":"when","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.noteOff'"]}]},"noteOn":{"name":"noteOn","qualifiedName":"dart-dom-web_audio.OscillatorNode.noteOn","comment":"","commentFrom":"dart-dom-web_audio.OscillatorNode.noteOn","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"when":{"name":"when","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.noteOn'"]}]},"setPeriodicWave":{"name":"setPeriodicWave","qualifiedName":"dart-dom-web_audio.OscillatorNode.setPeriodicWave","comment":"","commentFrom":"dart-dom-web_audio.OscillatorNode.setPeriodicWave","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"periodicWave":{"name":"periodicWave","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-web_audio.PeriodicWave","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.setPeriodicWave'"]},{"name":"metadata.Experimental","parameters":[]}]},"start":{"name":"start","qualifiedName":"dart-dom-web_audio.OscillatorNode.start","comment":"","commentFrom":"dart-dom-web_audio.OscillatorNode.start","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"when":{"name":"when","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.start'"]}]},"stop":{"name":"stop","qualifiedName":"dart-dom-web_audio.OscillatorNode.stop","comment":"","commentFrom":"dart-dom-web_audio.OscillatorNode.stop","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"when":{"name":"when","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode.stop'"]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-web_audio.OscillatorNode.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-web_audio.OscillatorNode.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"on":{"name":"on","qualifiedName":"dart-dom-web_audio.OscillatorNode.on","comment":"<p>This is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.</p>","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.on","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Events","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-web_audio.OscillatorNode.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-web_audio.OscillatorNode.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-web_audio.OscillatorNode.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-web_audio.OscillatorNode.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"addEventListener":{"name":"addEventListener","qualifiedName":"dart-dom-web_audio.OscillatorNode.addEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.addEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.addEventListener'"]}]},"connectNode":{"name":"connectNode","qualifiedName":"dart-dom-web_audio.OscillatorNode.connectNode","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioNode.connectNode","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"destination":{"name":"destination","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-web_audio.AudioNode","inner":[]}],"value":null,"annotations":[]},"output":{"name":"output","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]},"input":{"name":"input","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.connect'"]}]},"connectParam":{"name":"connectParam","qualifiedName":"dart-dom-web_audio.OscillatorNode.connectParam","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioNode.connectParam","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"destination":{"name":"destination","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-web_audio.AudioParam","inner":[]}],"value":null,"annotations":[]},"output":{"name":"output","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.int","inner":[]}],"value":"0","annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.connect'"]}]},"disconnect":{"name":"disconnect","qualifiedName":"dart-dom-web_audio.OscillatorNode.disconnect","comment":"","commentFrom":"","inheritedFrom":"dart-dom-web_audio.AudioNode.disconnect","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"output":{"name":"output","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'AudioNode.disconnect'"]}]},"dispatchEvent":{"name":"dispatchEvent","qualifiedName":"dart-dom-web_audio.OscillatorNode.dispatchEvent","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.dispatchEvent","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.dispatchEvent'"]}]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-web_audio.OscillatorNode.noSuchMethod","comment":"<p><a>dart-dom-web_audio.OscillatorNode.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-web_audio.OscillatorNode.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-web_audio.OscillatorNode.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-web_audio.OscillatorNode.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"removeEventListener":{"name":"removeEventListener","qualifiedName":"dart-dom-web_audio.OscillatorNode.removeEventListener","comment":"","commentFrom":"","inheritedFrom":"dart-dom-html.EventTarget.removeEventListener","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"type":{"name":"type","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.EventListener","inner":[]}],"value":null,"annotations":[]},"useCapture":{"name":"useCapture","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'EventTarget.removeEventListener'"]}]},"toString":{"name":"toString","qualifiedName":"dart-dom-web_audio.OscillatorNode.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'OscillatorNode'"]},{"name":"metadata.Experimental","parameters":[]}],"generics":{}}