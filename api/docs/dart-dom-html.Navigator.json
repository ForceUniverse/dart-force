{"name":"Navigator","qualifiedName":"dart-dom-html.Navigator","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":["dart-dom-html.NavigatorID","dart-dom-html.NavigatorOnLine"],"subclass":[],"variables":{"appCodeName":{"name":"appCodeName","qualifiedName":"dart-dom-html.Navigator.appCodeName","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.appCodeName'"]},{"name":"metadata.Experimental","parameters":[]}]},"appName":{"name":"appName","qualifiedName":"dart-dom-html.Navigator.appName","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.appName'"]}]},"appVersion":{"name":"appVersion","qualifiedName":"dart-dom-html.Navigator.appVersion","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.appVersion'"]}]},"cookieEnabled":{"name":"cookieEnabled","qualifiedName":"dart-dom-html.Navigator.cookieEnabled","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.cookieEnabled'"]},{"name":"metadata.Unstable","parameters":[]}]},"doNotTrack":{"name":"doNotTrack","qualifiedName":"dart-dom-html.Navigator.doNotTrack","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.doNotTrack'"]},{"name":"metadata.Experimental","parameters":[]}]},"geolocation":{"name":"geolocation","qualifiedName":"dart-dom-html.Navigator.geolocation","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.Geolocation","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.geolocation'"]},{"name":"metadata.Unstable","parameters":[]}]},"maxTouchPoints":{"name":"maxTouchPoints","qualifiedName":"dart-dom-html.Navigator.maxTouchPoints","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.maxTouchPoints'"]},{"name":"metadata.Experimental","parameters":[]}]},"mimeTypes":{"name":"mimeTypes","qualifiedName":"dart-dom-html.Navigator.mimeTypes","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.MimeTypeArray","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.mimeTypes'"]},{"name":"metadata.Experimental","parameters":[]}]},"onLine":{"name":"onLine","qualifiedName":"dart-dom-html.Navigator.onLine","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.onLine'"]},{"name":"metadata.Unstable","parameters":[]}]},"persistentStorage":{"name":"persistentStorage","qualifiedName":"dart-dom-html.Navigator.persistentStorage","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.DeprecatedStorageQuota","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.webkitPersistentStorage'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Experimental","parameters":[]}]},"platform":{"name":"platform","qualifiedName":"dart-dom-html.Navigator.platform","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.platform'"]}]},"product":{"name":"product","qualifiedName":"dart-dom-html.Navigator.product","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.product'"]},{"name":"metadata.Unstable","parameters":[]}]},"productSub":{"name":"productSub","qualifiedName":"dart-dom-html.Navigator.productSub","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.productSub'"]},{"name":"metadata.Unstable","parameters":[]}]},"serviceWorker":{"name":"serviceWorker","qualifiedName":"dart-dom-html.Navigator.serviceWorker","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.ServiceWorkerContainer","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.serviceWorker'"]},{"name":"metadata.Experimental","parameters":[]}]},"storageQuota":{"name":"storageQuota","qualifiedName":"dart-dom-html.Navigator.storageQuota","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.StorageQuota","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.storageQuota'"]},{"name":"metadata.Experimental","parameters":[]}]},"temporaryStorage":{"name":"temporaryStorage","qualifiedName":"dart-dom-html.Navigator.temporaryStorage","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.DeprecatedStorageQuota","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.webkitTemporaryStorage'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Experimental","parameters":[]}]},"userAgent":{"name":"userAgent","qualifiedName":"dart-dom-html.Navigator.userAgent","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.userAgent'"]}]},"vendor":{"name":"vendor","qualifiedName":"dart-dom-html.Navigator.vendor","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.vendor'"]},{"name":"metadata.Unstable","parameters":[]}]},"vendorSub":{"name":"vendorSub","qualifiedName":"dart-dom-html.Navigator.vendorSub","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.vendorSub'"]},{"name":"metadata.Unstable","parameters":[]}]}},"inheritedVariables":{"appCodeName":{"name":"appCodeName","qualifiedName":"dart-dom-html.NavigatorID.appCodeName","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"appName":{"name":"appName","qualifiedName":"dart-dom-html.NavigatorID.appName","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"appVersion":{"name":"appVersion","qualifiedName":"dart-dom-html.NavigatorID.appVersion","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"platform":{"name":"platform","qualifiedName":"dart-dom-html.NavigatorID.platform","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"product":{"name":"product","qualifiedName":"dart-dom-html.NavigatorID.product","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"userAgent":{"name":"userAgent","qualifiedName":"dart-dom-html.NavigatorID.userAgent","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"onLine":{"name":"onLine","qualifiedName":"dart-dom-html.NavigatorOnLine.onLine","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"language":{"name":"language","qualifiedName":"dart-dom-html.Navigator.language","comment":"","commentFrom":"dart-dom-html.Navigator.language","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.language'"]}]}},"constructors":{},"operators":{},"methods":{"getGamepads":{"name":"getGamepads","qualifiedName":"dart-dom-html.Navigator.getGamepads","comment":"","commentFrom":"dart-dom-html.Navigator.getGamepads","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-dom-html.Gamepad","inner":[]}]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.webkitGetGamepads'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.SAFARI"]},{"name":"metadata.Experimental","parameters":[]}]},"getStorageUpdates":{"name":"getStorageUpdates","qualifiedName":"dart-dom-html.Navigator.getStorageUpdates","comment":"","commentFrom":"dart-dom-html.Navigator.getStorageUpdates","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.getStorageUpdates'"]},{"name":"metadata.Experimental","parameters":[]}]},"getUserMedia":{"name":"getUserMedia","qualifiedName":"dart-dom-html.Navigator.getUserMedia","comment":"<p>Gets a stream (video and or audio) from the local computer.</p>\n<p>Use <a>dart-dom-html.MediaStream.supported</a> to check if this is supported by the current\nplatform. The arguments <code>audio</code> and <code>video</code> default to <code>false</code> (stream does\nnot use audio or video, respectively).</p>\n<p>Simple example usage:</p>\n<pre><code>window.navigator.getUserMedia(audio: true, video: true).then((stream) {\n  var video = new VideoElement()\n    ..autoplay = true\n    ..src = Url.createObjectUrlFromStream(stream);\n  document.body.append(video);\n});\n</code></pre>\n<p>The user can also pass in Maps to the audio or video parameters to specify\nmandatory and optional constraints for the media stream. Not passing in a\nmap, but passing in <code>true</code> will provide a MediaStream with audio or\nvideo capabilities, but without any additional constraints. The particular\nconstraint names for audio and video are still in flux, but as of this\nwriting, here is an example providing more constraints.</p>\n<pre><code>window.navigator.getUserMedia(\n    audio: true,\n    video: {'mandatory':\n               { 'minAspectRatio': 1.333, 'maxAspectRatio': 1.334 },\n            'optional':\n               [{ 'minFrameRate': 60 },\n                { 'maxWidth': 640 }]\n});\n</code></pre>\n<p>See also:\n* <a>dart-dom-html.MediaStream.supported</a></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-dom-html.MediaStream","inner":[]}]}],"parameters":{"audio":{"name":"audio","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"false","annotations":[]},"video":{"name":"video","optional":true,"named":true,"default":true,"type":[{"outer":"dynamic","inner":[]}],"value":"false","annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.webkitGetUserMedia'"]},{"name":"metadata.SupportedBrowser","parameters":["SupportedBrowser.CHROME"]},{"name":"metadata.Experimental","parameters":[]}]},"isProtocolHandlerRegistered":{"name":"isProtocolHandlerRegistered","qualifiedName":"dart-dom-html.Navigator.isProtocolHandlerRegistered","comment":"","commentFrom":"dart-dom-html.Navigator.isProtocolHandlerRegistered","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"scheme":{"name":"scheme","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.isProtocolHandlerRegistered'"]},{"name":"metadata.Experimental","parameters":[]}]},"registerProtocolHandler":{"name":"registerProtocolHandler","qualifiedName":"dart-dom-html.Navigator.registerProtocolHandler","comment":"","commentFrom":"dart-dom-html.Navigator.registerProtocolHandler","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"scheme":{"name":"scheme","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"title":{"name":"title","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.registerProtocolHandler'"]},{"name":"metadata.Unstable","parameters":[]}]},"requestMidiAccess":{"name":"requestMidiAccess","qualifiedName":"dart-dom-html.Navigator.requestMidiAccess","comment":"","commentFrom":"dart-dom-html.Navigator.requestMidiAccess","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.MidiAccessPromise","inner":[]}],"parameters":{"options":{"name":"options","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.requestMIDIAccess'"]},{"name":"metadata.Experimental","parameters":[]}]},"unregisterProtocolHandler":{"name":"unregisterProtocolHandler","qualifiedName":"dart-dom-html.Navigator.unregisterProtocolHandler","comment":"","commentFrom":"dart-dom-html.Navigator.unregisterProtocolHandler","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"scheme":{"name":"scheme","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator.unregisterProtocolHandler'"]},{"name":"metadata.Experimental","parameters":[]}]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"dart-dom-html.Navigator.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>dart-dom-html.Navigator.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"dart-core.Object.hashCode","inheritedFrom":"dart-dom-html.Interceptor.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"dart-dom-html.Navigator.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"dart-core.Object.runtimeType","inheritedFrom":"dart-dom-html.Interceptor.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"dart-dom-html.Navigator.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>dart-dom-html.Navigator.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>dart-dom-html.Navigator.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"dart-core.Object.==","inheritedFrom":"dart-dom-html.Interceptor.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"dart-dom-html.Navigator.noSuchMethod","comment":"<p><a>dart-dom-html.Navigator.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>dart-dom-html.Navigator.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>dart-dom-html.Navigator.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>dart-dom-html.Navigator.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"dart-core.Object.noSuchMethod","inheritedFrom":"dart-dom-html.Interceptor.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"dart-dom-html.Navigator.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"dart-dom-html.Interceptor.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"metadata.DomName","parameters":["'Navigator'"]}],"generics":{}}