library app_bootstrap;

import 'package:polymer/polymer.dart';

import 'package:dartdoc_viewer/components/comment.dart' as i0;
import 'package:dartdoc_viewer/components/closure.dart' as i1;
import 'package:dartdoc_viewer/components/parameters.dart' as i2;
import 'package:dartdoc_viewer/components/item.dart' as i3;
import 'package:dartdoc_viewer/components/annotations.dart' as i4;
import 'package:dartdoc_viewer/components/link.dart' as i5;
import 'package:dartdoc_viewer/components/type.dart' as i6;
import 'package:dartdoc_viewer/components/variable-heading.dart' as i7;
import 'package:dartdoc_viewer/components/variable.dart' as i8;
import 'package:dartdoc_viewer/components/method.dart' as i9;
import 'package:dartdoc_viewer/components/typedef.dart' as i10;
import 'package:dartdoc_viewer/components/category.dart' as i11;
import 'package:dartdoc_viewer/components/minimap-element.dart' as i12;
import 'package:dartdoc_viewer/components/homepage.dart' as i13;
import 'package:dartdoc_viewer/components/class.dart' as i14;
import 'package:dartdoc_viewer/components/library.dart' as i15;
import 'package:dartdoc_viewer/components/page.dart' as i16;
import 'package:dartdoc_viewer/components/results.dart' as i17;
import 'package:dartdoc_viewer/components/search.dart' as i18;
import 'package:dartdoc_viewer/components/minimap-library.dart' as i19;
import 'package:dartdoc_viewer/components/library-panel.dart' as i20;
import 'package:dartdoc_viewer/components/minimap-class.dart' as i21;
import 'package:dartdoc_viewer/components/breadcrumbs.dart' as i22;
import 'package:dartdoc_viewer/components/main.dart' as i23;
import 'index.html.0.dart' as i24;
import 'package:smoke/smoke.dart' show Declaration, PROPERTY, METHOD;
import 'package:smoke/static.dart' show useGeneratedCode, StaticConfiguration;
import 'package:dartdoc_viewer/components/comment.dart' as smoke_0;
import 'dart:html' as smoke_1;
import 'package:observe/src/metadata.dart' as smoke_2;
import 'package:polymer/polymer.dart' as smoke_3;
import 'package:dartdoc_viewer/item.dart' as smoke_4;
import 'package:dartdoc_viewer/components/closure.dart' as smoke_5;
import 'package:dartdoc_viewer/components/parameters.dart' as smoke_6;
import 'package:dartdoc_viewer/member.dart' as smoke_7;
import 'package:dartdoc_viewer/components/item.dart' as smoke_8;
import 'package:dartdoc_viewer/components/annotations.dart' as smoke_9;
import 'package:dartdoc_viewer/components/link.dart' as smoke_10;
import 'package:dartdoc_viewer/components/type.dart' as smoke_11;
import 'package:dartdoc_viewer/components/variable-heading.dart' as smoke_12;
import 'package:dartdoc_viewer/components/variable.dart' as smoke_13;
import 'package:dartdoc_viewer/components/method.dart' as smoke_14;
import 'package:dartdoc_viewer/components/typedef.dart' as smoke_15;
import 'package:dartdoc_viewer/components/category.dart' as smoke_16;
import 'package:observe/src/observable_list.dart' as smoke_17;
import 'package:dartdoc_viewer/components/minimap-element.dart' as smoke_18;
import 'package:dartdoc_viewer/components/homepage.dart' as smoke_19;
import 'package:dartdoc_viewer/components/class.dart' as smoke_20;
import 'package:dartdoc_viewer/components/library.dart' as smoke_21;
import 'package:dartdoc_viewer/components/page.dart' as smoke_22;
import 'package:dartdoc_viewer/components/results.dart' as smoke_23;
import 'package:dartdoc_viewer/search.dart' as smoke_24;
import 'package:dartdoc_viewer/components/search.dart' as smoke_25;
import 'package:dartdoc_viewer/components/minimap-library.dart' as smoke_26;
import 'package:dartdoc_viewer/components/library-panel.dart' as smoke_27;
import 'package:dartdoc_viewer/components/minimap-class.dart' as smoke_28;
import 'package:dartdoc_viewer/components/breadcrumbs.dart' as smoke_29;
import 'package:dartdoc_viewer/components/main.dart' as smoke_30;
abstract class _M0 {} // DivElement & Polymer
abstract class _M1 {} // _M0 & ChangeNotifier
abstract class _M2 {} // PolymerElement & ChangeNotifier
abstract class _M3 {} // DartdocElement & ChangeNotifier
abstract class _M4 {} // MemberElement & ChangeNotifier
abstract class _M5 {} // InheritedElement & ChangeNotifier
abstract class _M6 {} // AnchorElement & Polymer
abstract class _M7 {} // _M6 & ChangeNotifier

void main() {
  useGeneratedCode(new StaticConfiguration(
      checkedMode: false,
      getters: {
        #accordionStyle: (o) => o.accordionStyle,
        #anchorHref: (o) => o.anchorHref,
        #annotations: (o) => o.annotations,
        #annotationsChanged: (o) => o.annotationsChanged,
        #breadcrumbs: (o) => o.breadcrumbs,
        #camelCaseName: (o) => o.camelCaseName,
        #caretStyle: (o) => o.caretStyle,
        #category: (o) => o.category,
        #categoryChanged: (o) => o.categoryChanged,
        #categoryLink: (o) => o.categoryLink,
        #classes: (o) => o.classes,
        #closure: (o) => o.closure,
        #closureChanged: (o) => o.closureChanged,
        #collapseSearchAndOptionsIfNeeded: (o) => o.collapseSearchAndOptionsIfNeeded,
        #commentFrom: (o) => o.commentFrom,
        #constantModifier: (o) => o.constantModifier,
        #constructors: (o) => o.constructors,
        #currentPage: (o) => o.currentPage,
        #decoratedName: (o) => o.decoratedName,
        #descriptiveName: (o) => o.descriptiveName,
        #descriptiveType: (o) => o.descriptiveType,
        #divClass: (o) => o.divClass,
        #dropdownOpen: (o) => o.dropdownOpen,
        #errors: (o) => o.errors,
        #functions: (o) => o.functions,
        #getter: (o) => o.getter,
        #hasInheritedComment: (o) => o.hasInheritedComment,
        #hasItems: (o) => o.hasItems,
        #hideShow: (o) => o.hideShow,
        #homePage: (o) => o.homePage,
        #idName: (o) => o.idName,
        #inheritedFrom: (o) => o.inheritedFrom,
        #instanceFunctions: (o) => o.instanceFunctions,
        #instanceVariables: (o) => o.instanceVariables,
        #isAbstract: (o) => o.isAbstract,
        #isClass: (o) => o.isClass,
        #isConstant: (o) => o.isConstant,
        #isEmpty: (o) => o.isEmpty,
        #isFinal: (o) => o.isFinal,
        #isFocused: (o) => o.isFocused,
        #isHome: (o) => o.isHome,
        #isInherited: (o) => o.isInherited,
        #isLibrary: (o) => o.isLibrary,
        #isMethod: (o) => o.isMethod,
        #isNotConstructor: (o) => o.isNotConstructor,
        #isNotEmpty: (o) => o.isNotEmpty,
        #isNotSetter: (o) => o.isNotSetter,
        #isOperator: (o) => o.isOperator,
        #isSetter: (o) => o.isSetter,
        #isStatic: (o) => o.isStatic,
        #isTypedef: (o) => o.isTypedef,
        #item: (o) => o.item,
        #itemChanged: (o) => o.itemChanged,
        #items: (o) => o.items,
        #itemsChanged: (o) => o.itemsChanged,
        #itemsToShow: (o) => o.itemsToShow,
        #lastCrumb: (o) => o.lastCrumb,
        #lazyClasses: (o) => o.lazyClasses,
        #lazyConstructors: (o) => o.lazyConstructors,
        #lazyErrors: (o) => o.lazyErrors,
        #lazyFunctions: (o) => o.lazyFunctions,
        #lazyInstanceFunctions: (o) => o.lazyInstanceFunctions,
        #lazyInstanceVariables: (o) => o.lazyInstanceVariables,
        #lazyOperators: (o) => o.lazyOperators,
        #lazyStaticFunctions: (o) => o.lazyStaticFunctions,
        #lazyStaticVariables: (o) => o.lazyStaticVariables,
        #lazyTypedefs: (o) => o.lazyTypedefs,
        #lazyVariables: (o) => o.lazyVariables,
        #libraries: (o) => o.libraries,
        #lineHeight: (o) => o.lineHeight,
        #methods: (o) => o.methods,
        #methodsChanged: (o) => o.methodsChanged,
        #modifiers: (o) => o.modifiers,
        #name: (o) => o.name,
        #nameWithGeneric: (o) => o.nameWithGeneric,
        #navHideShow: (o) => o.navHideShow,
        #operators: (o) => o.operators,
        #outerLibrary: (o) => o.outerLibrary,
        #pageContentClass: (o) => o.pageContentClass,
        #parameters: (o) => o.parameters,
        #parametersChanged: (o) => o.parametersChanged,
        #position: (o) => o.position,
        #prefixedAnchorHref: (o) => o.prefixedAnchorHref,
        #prefixedLinkHref: (o) => o.prefixedLinkHref,
        #prefixedLocation: (o) => o.prefixedLocation,
        #preview: (o) => o.preview,
        #previewChanged: (o) => o.previewChanged,
        #previewComment: (o) => o.previewComment,
        #results: (o) => o.results,
        #searchQuery: (o) => o.searchQuery,
        #searchQueryChanged: (o) => o.searchQueryChanged,
        #selectDropDownItem: (o) => o.selectDropDownItem,
        #shouldShowClassMinimap: (o) => o.shouldShowClassMinimap,
        #shouldShowComment: (o) => o.shouldShowComment,
        #shouldShowCommentFrom: (o) => o.shouldShowCommentFrom,
        #shouldShowLibraryMinimap: (o) => o.shouldShowLibraryMinimap,
        #shouldShowLibraryPanel: (o) => o.shouldShowLibraryPanel,
        #showOrHideInherited: (o) => o.showOrHideInherited,
        #showOrHideLibraries: (o) => o.showOrHideLibraries,
        #showOrHideMinimap: (o) => o.showOrHideMinimap,
        #showOrHideObjectMembers: (o) => o.showOrHideObjectMembers,
        #showOrHidePackages: (o) => o.showOrHidePackages,
        #showVersion: (o) => o.showVersion,
        #simpleType: (o) => o.simpleType,
        #staticFunctions: (o) => o.staticFunctions,
        #staticModifier: (o) => o.staticModifier,
        #staticVariables: (o) => o.staticVariables,
        #stylizedName: (o) => o.stylizedName,
        #title: (o) => o.title,
        #toggleInherited: (o) => o.toggleInherited,
        #toggleMinimap: (o) => o.toggleMinimap,
        #toggleObjectMembers: (o) => o.toggleObjectMembers,
        #toggleOptionsMenu: (o) => o.toggleOptionsMenu,
        #togglePanel: (o) => o.togglePanel,
        #togglePkg: (o) => o.togglePkg,
        #type: (o) => o.type,
        #typeChanged: (o) => o.typeChanged,
        #typedefs: (o) => o.typedefs,
        #typedefsChanged: (o) => o.typedefsChanged,
        #url: (o) => o.url,
        #variables: (o) => o.variables,
        #variablesChanged: (o) => o.variablesChanged,
        #version: (o) => o.version,
        #viewer: (o) => o.viewer,
      },
      setters: {
        #accordionStyle: (o, v) { o.accordionStyle = v; },
        #annotations: (o, v) { o.annotations = v; },
        #breadcrumbs: (o, v) { o.breadcrumbs = v; },
        #camelCaseName: (o, v) { o.camelCaseName = v; },
        #caretStyle: (o, v) { o.caretStyle = v; },
        #category: (o, v) { o.category = v; },
        #categoryLink: (o, v) { o.categoryLink = v; },
        #classes: (o, v) { o.classes = v; },
        #closure: (o, v) { o.closure = v; },
        #commentFrom: (o, v) { o.commentFrom = v; },
        #constantModifier: (o, v) { o.constantModifier = v; },
        #constructors: (o, v) { o.constructors = v; },
        #currentPage: (o, v) { o.currentPage = v; },
        #descriptiveName: (o, v) { o.descriptiveName = v; },
        #descriptiveType: (o, v) { o.descriptiveType = v; },
        #divClass: (o, v) { o.divClass = v; },
        #dropdownOpen: (o, v) { o.dropdownOpen = v; },
        #errors: (o, v) { o.errors = v; },
        #functions: (o, v) { o.functions = v; },
        #getter: (o, v) { o.getter = v; },
        #hasInheritedComment: (o, v) { o.hasInheritedComment = v; },
        #hasItems: (o, v) { o.hasItems = v; },
        #idName: (o, v) { o.idName = v; },
        #inheritedFrom: (o, v) { o.inheritedFrom = v; },
        #instanceFunctions: (o, v) { o.instanceFunctions = v; },
        #instanceVariables: (o, v) { o.instanceVariables = v; },
        #isClass: (o, v) { o.isClass = v; },
        #isFocused: (o, v) { o.isFocused = v; },
        #isHome: (o, v) { o.isHome = v; },
        #isInherited: (o, v) { o.isInherited = v; },
        #isLibrary: (o, v) { o.isLibrary = v; },
        #isMethod: (o, v) { o.isMethod = v; },
        #isNotConstructor: (o, v) { o.isNotConstructor = v; },
        #isNotSetter: (o, v) { o.isNotSetter = v; },
        #isTypedef: (o, v) { o.isTypedef = v; },
        #item: (o, v) { o.item = v; },
        #items: (o, v) { o.items = v; },
        #itemsToShow: (o, v) { o.itemsToShow = v; },
        #lastCrumb: (o, v) { o.lastCrumb = v; },
        #lazyClasses: (o, v) { o.lazyClasses = v; },
        #lazyConstructors: (o, v) { o.lazyConstructors = v; },
        #lazyErrors: (o, v) { o.lazyErrors = v; },
        #lazyFunctions: (o, v) { o.lazyFunctions = v; },
        #lazyInstanceFunctions: (o, v) { o.lazyInstanceFunctions = v; },
        #lazyInstanceVariables: (o, v) { o.lazyInstanceVariables = v; },
        #lazyOperators: (o, v) { o.lazyOperators = v; },
        #lazyStaticFunctions: (o, v) { o.lazyStaticFunctions = v; },
        #lazyStaticVariables: (o, v) { o.lazyStaticVariables = v; },
        #lazyTypedefs: (o, v) { o.lazyTypedefs = v; },
        #lazyVariables: (o, v) { o.lazyVariables = v; },
        #lineHeight: (o, v) { o.lineHeight = v; },
        #methods: (o, v) { o.methods = v; },
        #modifiers: (o, v) { o.modifiers = v; },
        #name: (o, v) { o.name = v; },
        #operators: (o, v) { o.operators = v; },
        #outerLibrary: (o, v) { o.outerLibrary = v; },
        #pageContentClass: (o, v) { o.pageContentClass = v; },
        #parameters: (o, v) { o.parameters = v; },
        #preview: (o, v) { o.preview = v; },
        #results: (o, v) { o.results = v; },
        #searchQuery: (o, v) { o.searchQuery = v; },
        #shouldShowClassMinimap: (o, v) { o.shouldShowClassMinimap = v; },
        #shouldShowComment: (o, v) { o.shouldShowComment = v; },
        #shouldShowCommentFrom: (o, v) { o.shouldShowCommentFrom = v; },
        #shouldShowLibraryMinimap: (o, v) { o.shouldShowLibraryMinimap = v; },
        #shouldShowLibraryPanel: (o, v) { o.shouldShowLibraryPanel = v; },
        #showOrHideInherited: (o, v) { o.showOrHideInherited = v; },
        #showOrHideLibraries: (o, v) { o.showOrHideLibraries = v; },
        #showOrHideMinimap: (o, v) { o.showOrHideMinimap = v; },
        #showOrHideObjectMembers: (o, v) { o.showOrHideObjectMembers = v; },
        #showOrHidePackages: (o, v) { o.showOrHidePackages = v; },
        #staticFunctions: (o, v) { o.staticFunctions = v; },
        #staticModifier: (o, v) { o.staticModifier = v; },
        #staticVariables: (o, v) { o.staticVariables = v; },
        #stylizedName: (o, v) { o.stylizedName = v; },
        #title: (o, v) { o.title = v; },
        #type: (o, v) { o.type = v; },
        #typedefs: (o, v) { o.typedefs = v; },
        #url: (o, v) { o.url = v; },
        #variables: (o, v) { o.variables = v; },
        #version: (o, v) { o.version = v; },
      },
      parents: {
        smoke_9.AnnotationElement: _M2,
        smoke_29.Breadcrumbs: _M2,
        smoke_16.CategoryElement: _M3,
        smoke_20.ClassElement: smoke_7.MemberElement,
        smoke_5.ClosureElement: _M2,
        smoke_0.CommentElement: _M1,
        smoke_19.HomeElement: smoke_7.MemberElement,
        smoke_8.ItemElement: smoke_7.MemberElement,
        smoke_27.LibraryPanel: smoke_7.DartdocElement,
        smoke_21.LibraryElement: smoke_7.MemberElement,
        smoke_10.LinkElement: _M2,
        smoke_30.MainElement: _M3,
        smoke_14.MethodElement: _M5,
        smoke_28.MinimapElementClass: smoke_7.MemberElement,
        smoke_18.MinimapElement: _M2,
        smoke_26.MinimapElementLibrary: smoke_7.MemberElement,
        smoke_22.PageElement: _M3,
        smoke_6.ParameterElement: _M3,
        smoke_23.Result: _M7,
        smoke_25.Search: _M2,
        smoke_11.TypeElement: _M2,
        smoke_15.TypedefElement: smoke_7.MemberElement,
        smoke_12.VariableHeading: _M4,
        smoke_13.VariableElement: _M5,
        smoke_7.DartdocElement: smoke_3.PolymerElement,
        smoke_7.InheritedElement: _M4,
        smoke_7.MemberElement: _M3,
        _M0: smoke_1.DivElement,
        _M1: _M0,
        _M2: smoke_3.PolymerElement,
        _M3: smoke_7.DartdocElement,
        _M4: smoke_7.MemberElement,
        _M5: smoke_7.InheritedElement,
        _M6: smoke_1.AnchorElement,
        _M7: _M6,
      },
      declarations: {
        smoke_9.AnnotationElement: {
          #annotations: const Declaration(#annotations, smoke_4.AnnotationGroup, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #annotationsChanged: const Declaration(#annotationsChanged, Function, kind: METHOD),
        },
        smoke_29.Breadcrumbs: {
          #breadcrumbs: const Declaration(#breadcrumbs, List, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #lastCrumb: const Declaration(#lastCrumb, smoke_4.Item, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_16.CategoryElement: {
          #accordionStyle: const Declaration(#accordionStyle, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #caretStyle: const Declaration(#caretStyle, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #category: const Declaration(#category, smoke_4.Category, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #categoryChanged: const Declaration(#categoryChanged, Function, kind: METHOD),
          #divClass: const Declaration(#divClass, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #hasItems: const Declaration(#hasItems, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #items: const Declaration(#items, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #itemsChanged: const Declaration(#itemsChanged, Function, kind: METHOD),
          #lineHeight: const Declaration(#lineHeight, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #methods: const Declaration(#methods, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #methodsChanged: const Declaration(#methodsChanged, Function, kind: METHOD),
          #stylizedName: const Declaration(#stylizedName, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #title: const Declaration(#title, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #typedefs: const Declaration(#typedefs, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #typedefsChanged: const Declaration(#typedefsChanged, Function, kind: METHOD),
          #variables: const Declaration(#variables, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #variablesChanged: const Declaration(#variablesChanged, Function, kind: METHOD),
        },
        smoke_20.ClassElement: {
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
        },
        smoke_5.ClosureElement: {
          #closure: const Declaration(#closure, smoke_4.Closure, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #closureChanged: const Declaration(#closureChanged, Function, kind: METHOD),
        },
        smoke_0.CommentElement: {
          #item: const Declaration(#item, smoke_4.Container, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #preview: const Declaration(#preview, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #previewChanged: const Declaration(#previewChanged, Function, kind: METHOD),
        },
        smoke_19.HomeElement: const {},
        smoke_8.ItemElement: const {},
        smoke_27.LibraryPanel: const {},
        smoke_21.LibraryElement: {
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
        },
        smoke_10.LinkElement: {
          #type: const Declaration(#type, smoke_4.LinkableType, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #typeChanged: const Declaration(#typeChanged, Function, kind: METHOD),
        },
        smoke_30.MainElement: {
          #pageContentClass: const Declaration(#pageContentClass, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #shouldShowClassMinimap: const Declaration(#shouldShowClassMinimap, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #shouldShowLibraryMinimap: const Declaration(#shouldShowLibraryMinimap, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #shouldShowLibraryPanel: const Declaration(#shouldShowLibraryPanel, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showOrHideInherited: const Declaration(#showOrHideInherited, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showOrHideLibraries: const Declaration(#showOrHideLibraries, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showOrHideMinimap: const Declaration(#showOrHideMinimap, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showOrHideObjectMembers: const Declaration(#showOrHideObjectMembers, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showOrHidePackages: const Declaration(#showOrHidePackages, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #showVersion: const Declaration(#showVersion, dynamic, kind: PROPERTY, isFinal: true, annotations: const [smoke_2.observable]),
          #version: const Declaration(#version, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_14.MethodElement: {
          #constantModifier: const Declaration(#constantModifier, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isNotConstructor: const Declaration(#isNotConstructor, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #modifiers: const Declaration(#modifiers, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #staticModifier: const Declaration(#staticModifier, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_28.MinimapElementClass: const {},
        smoke_18.MinimapElement: {
          #camelCaseName: const Declaration(#camelCaseName, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #category: const Declaration(#category, smoke_4.Category, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #categoryChanged: const Declaration(#categoryChanged, Function, kind: METHOD),
          #categoryLink: const Declaration(#categoryLink, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #item: const Declaration(#item, smoke_4.Item, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #itemsToShow: const Declaration(#itemsToShow, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_26.MinimapElementLibrary: const {},
        smoke_22.PageElement: {
          #isClass: const Declaration(#isClass, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isHome: const Declaration(#isHome, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isLibrary: const Declaration(#isLibrary, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isMethod: const Declaration(#isMethod, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isTypedef: const Declaration(#isTypedef, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #item: const Declaration(#item, smoke_4.Item, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
        },
        smoke_6.ParameterElement: {
          #parameters: const Declaration(#parameters, List, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #parametersChanged: const Declaration(#parametersChanged, Function, kind: METHOD),
        },
        smoke_23.Result: {
          #descriptiveName: const Declaration(#descriptiveName, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #descriptiveType: const Declaration(#descriptiveType, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #item: const Declaration(#item, smoke_24.SearchResult, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #outerLibrary: const Declaration(#outerLibrary, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_25.Search: {
          #dropdownOpen: const Declaration(#dropdownOpen, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isFocused: const Declaration(#isFocused, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #results: const Declaration(#results, smoke_17.ObservableList, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #searchQuery: const Declaration(#searchQuery, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #searchQueryChanged: const Declaration(#searchQueryChanged, Function, kind: METHOD),
        },
        smoke_11.TypeElement: {
          #type: const Declaration(#type, smoke_4.NestedType, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_3.published]),
          #typeChanged: const Declaration(#typeChanged, Function, kind: METHOD),
        },
        smoke_15.TypedefElement: const {},
        smoke_12.VariableHeading: {
          #getter: const Declaration(#getter, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isNotSetter: const Declaration(#isNotSetter, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #name: const Declaration(#name, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_13.VariableElement: {
          #annotations: const Declaration(#annotations, smoke_4.AnnotationGroup, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_7.InheritedElement: {
          #commentFrom: const Declaration(#commentFrom, smoke_4.LinkableType, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #hasInheritedComment: const Declaration(#hasInheritedComment, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #inheritedFrom: const Declaration(#inheritedFrom, smoke_4.LinkableType, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #isInherited: const Declaration(#isInherited, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
          #shouldShowComment: const Declaration(#shouldShowComment, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #shouldShowCommentFrom: const Declaration(#shouldShowCommentFrom, bool, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
        },
        smoke_7.MemberElement: {
          #idName: const Declaration(#idName, String, kind: PROPERTY, annotations: const [smoke_2.reflectable, smoke_2.observable]),
          #item: const Declaration(#item, dynamic, kind: PROPERTY, annotations: const [smoke_3.published]),
          #itemChanged: const Declaration(#itemChanged, Function, kind: METHOD),
        },
        _M4: {
          #item: const Declaration(#item, dynamic, kind: PROPERTY, annotations: const [smoke_3.published]),
        },
      },
      names: {
        #accordionStyle: r'accordionStyle',
        #anchorHref: r'anchorHref',
        #annotations: r'annotations',
        #annotationsChanged: r'annotationsChanged',
        #breadcrumbs: r'breadcrumbs',
        #camelCaseName: r'camelCaseName',
        #caretStyle: r'caretStyle',
        #category: r'category',
        #categoryChanged: r'categoryChanged',
        #categoryLink: r'categoryLink',
        #classes: r'classes',
        #closure: r'closure',
        #closureChanged: r'closureChanged',
        #collapseSearchAndOptionsIfNeeded: r'collapseSearchAndOptionsIfNeeded',
        #commentFrom: r'commentFrom',
        #constantModifier: r'constantModifier',
        #constructors: r'constructors',
        #currentPage: r'currentPage',
        #decoratedName: r'decoratedName',
        #descriptiveName: r'descriptiveName',
        #descriptiveType: r'descriptiveType',
        #divClass: r'divClass',
        #dropdownOpen: r'dropdownOpen',
        #errors: r'errors',
        #functions: r'functions',
        #getter: r'getter',
        #hasInheritedComment: r'hasInheritedComment',
        #hasItems: r'hasItems',
        #hideShow: r'hideShow',
        #homePage: r'homePage',
        #idName: r'idName',
        #inheritedFrom: r'inheritedFrom',
        #instanceFunctions: r'instanceFunctions',
        #instanceVariables: r'instanceVariables',
        #isAbstract: r'isAbstract',
        #isClass: r'isClass',
        #isConstant: r'isConstant',
        #isEmpty: r'isEmpty',
        #isFinal: r'isFinal',
        #isFocused: r'isFocused',
        #isHome: r'isHome',
        #isInherited: r'isInherited',
        #isLibrary: r'isLibrary',
        #isMethod: r'isMethod',
        #isNotConstructor: r'isNotConstructor',
        #isNotEmpty: r'isNotEmpty',
        #isNotSetter: r'isNotSetter',
        #isOperator: r'isOperator',
        #isSetter: r'isSetter',
        #isStatic: r'isStatic',
        #isTypedef: r'isTypedef',
        #item: r'item',
        #itemChanged: r'itemChanged',
        #items: r'items',
        #itemsChanged: r'itemsChanged',
        #itemsToShow: r'itemsToShow',
        #lastCrumb: r'lastCrumb',
        #lazyClasses: r'lazyClasses',
        #lazyConstructors: r'lazyConstructors',
        #lazyErrors: r'lazyErrors',
        #lazyFunctions: r'lazyFunctions',
        #lazyInstanceFunctions: r'lazyInstanceFunctions',
        #lazyInstanceVariables: r'lazyInstanceVariables',
        #lazyOperators: r'lazyOperators',
        #lazyStaticFunctions: r'lazyStaticFunctions',
        #lazyStaticVariables: r'lazyStaticVariables',
        #lazyTypedefs: r'lazyTypedefs',
        #lazyVariables: r'lazyVariables',
        #libraries: r'libraries',
        #lineHeight: r'lineHeight',
        #methods: r'methods',
        #methodsChanged: r'methodsChanged',
        #modifiers: r'modifiers',
        #name: r'name',
        #nameWithGeneric: r'nameWithGeneric',
        #navHideShow: r'navHideShow',
        #operators: r'operators',
        #outerLibrary: r'outerLibrary',
        #pageContentClass: r'pageContentClass',
        #parameters: r'parameters',
        #parametersChanged: r'parametersChanged',
        #position: r'position',
        #prefixedAnchorHref: r'prefixedAnchorHref',
        #prefixedLinkHref: r'prefixedLinkHref',
        #prefixedLocation: r'prefixedLocation',
        #preview: r'preview',
        #previewChanged: r'previewChanged',
        #previewComment: r'previewComment',
        #results: r'results',
        #searchQuery: r'searchQuery',
        #searchQueryChanged: r'searchQueryChanged',
        #selectDropDownItem: r'selectDropDownItem',
        #shouldShowClassMinimap: r'shouldShowClassMinimap',
        #shouldShowComment: r'shouldShowComment',
        #shouldShowCommentFrom: r'shouldShowCommentFrom',
        #shouldShowLibraryMinimap: r'shouldShowLibraryMinimap',
        #shouldShowLibraryPanel: r'shouldShowLibraryPanel',
        #showOrHideInherited: r'showOrHideInherited',
        #showOrHideLibraries: r'showOrHideLibraries',
        #showOrHideMinimap: r'showOrHideMinimap',
        #showOrHideObjectMembers: r'showOrHideObjectMembers',
        #showOrHidePackages: r'showOrHidePackages',
        #showVersion: r'showVersion',
        #simpleType: r'simpleType',
        #staticFunctions: r'staticFunctions',
        #staticModifier: r'staticModifier',
        #staticVariables: r'staticVariables',
        #stylizedName: r'stylizedName',
        #title: r'title',
        #toggleInherited: r'toggleInherited',
        #toggleMinimap: r'toggleMinimap',
        #toggleObjectMembers: r'toggleObjectMembers',
        #toggleOptionsMenu: r'toggleOptionsMenu',
        #togglePanel: r'togglePanel',
        #togglePkg: r'togglePkg',
        #type: r'type',
        #typeChanged: r'typeChanged',
        #typedefs: r'typedefs',
        #typedefsChanged: r'typedefsChanged',
        #url: r'url',
        #variables: r'variables',
        #variablesChanged: r'variablesChanged',
        #version: r'version',
        #viewer: r'viewer',
      }));
  startPolymer([
      () => Polymer.register('dartdoc-comment', i0.CommentElement),
      () => Polymer.register('dartdoc-closure', i1.ClosureElement),
      () => Polymer.register('dartdoc-parameter', i2.ParameterElement),
      () => Polymer.register('dartdoc-item', i3.ItemElement),
      () => Polymer.register('dartdoc-annotation', i4.AnnotationElement),
      () => Polymer.register('dartdoc-link', i5.LinkElement),
      () => Polymer.register('dartdoc-type', i6.TypeElement),
      () => Polymer.register('variable-heading', i7.VariableHeading),
      () => Polymer.register('dartdoc-variable', i8.VariableElement),
      i9.registerMethodElement,
      () => Polymer.register('dartdoc-typedef', i10.TypedefElement),
      () => Polymer.register('dartdoc-category', i11.CategoryElement),
      () => Polymer.register('dartdoc-minimap', i12.MinimapElement),
      () => Polymer.register('dartdoc-homepage', i13.HomeElement),
      () => Polymer.register('dartdoc-class', i14.ClassElement),
      () => Polymer.register('dartdoc-library', i15.LibraryElement),
      () => Polymer.register('dartdoc-page', i16.PageElement),
      () => Polymer.register('search-result', i17.Result),
      () => Polymer.register('search-box', i18.Search),
      () => Polymer.register('dartdoc-minimap-library', i19.MinimapElementLibrary),
      () => Polymer.register('dartdoc-library-panel', i20.LibraryPanel),
      () => Polymer.register('dartdoc-minimap-class', i21.MinimapElementClass),
      () => Polymer.register('dartdoc-breadcrumbs', i22.Breadcrumbs),
      () => Polymer.register('dartdoc-main', i23.MainElement),
      i24.main,
    ]);
}
